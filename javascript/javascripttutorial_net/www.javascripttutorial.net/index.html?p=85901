<!DOCTYPE html><html lang="en-US"><head ><meta charset="UTF-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link media="all" href="https://cdn.javascripttutorial.net/wp-content/cache/autoptimize/css/autoptimize_4b6c23c49276886eaa08de07eb9dc8e2.css" rel="stylesheet" /><title>Promise Chaining in JavaScript</title><meta name="description" content="In this tutorial, you will learn about the promise chaining pattern that chains promises to execute asynchronous tasks in sequence." /><meta name="robots" content="index, follow" /><meta name="googlebot" content="index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1" /><meta name="bingbot" content="index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1" /><link rel="canonical" href="https://www.javascripttutorial.net/es6/promise-chaining/" /><meta property="og:locale" content="en_US" /><meta property="og:type" content="article" /><meta property="og:title" content="Promise Chaining in JavaScript" /><meta property="og:description" content="In this tutorial, you will learn about the promise chaining pattern that chains promises to execute asynchronous tasks in sequence." /><meta property="og:url" content="https://www.javascripttutorial.net/es6/promise-chaining/" /><meta property="og:site_name" content="JavaScript Tutorial" /><meta property="article:modified_time" content="2020-06-22T00:15:27+00:00" /><meta property="og:image" content="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Chaining.png" /><meta name="twitter:card" content="summary" /> <script type="application/ld+json" class="yoast-schema-graph">{"@context":"https://schema.org","@graph":[{"@type":"WebSite","@id":"https://www.javascripttutorial.net/#website","url":"https://www.javascripttutorial.net/","name":"JavaScript Tutorial","description":"A comprehensive JavaScript Tutorial","potentialAction":[{"@type":"SearchAction","target":"https://www.javascripttutorial.net/?s={search_term_string}","query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https://www.javascripttutorial.net/es6/promise-chaining/#primaryimage","inLanguage":"en-US","url":"https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Chaining.png","width":361,"height":452,"caption":"JavaScript Promise Chaining"},{"@type":"WebPage","@id":"https://www.javascripttutorial.net/es6/promise-chaining/#webpage","url":"https://www.javascripttutorial.net/es6/promise-chaining/","name":"Promise Chaining in JavaScript","isPartOf":{"@id":"https://www.javascripttutorial.net/#website"},"primaryImageOfPage":{"@id":"https://www.javascripttutorial.net/es6/promise-chaining/#primaryimage"},"datePublished":"2020-03-15T08:43:02+00:00","dateModified":"2020-06-22T00:15:27+00:00","description":"In this tutorial, you will learn about the promise chaining pattern that chains promises to execute asynchronous tasks in sequence.","inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https://www.javascripttutorial.net/es6/promise-chaining/"]}]}]}</script> <link rel='dns-prefetch' href='//ajax.googleapis.com' /><link rel="alternate" type="application/rss+xml" title="JavaScript Tutorial &raquo; Feed" href="https://www.javascripttutorial.net/feed/" /><link rel="alternate" type="application/rss+xml" title="JavaScript Tutorial &raquo; Comments Feed" href="https://www.javascripttutorial.net/comments/feed/" /> <script type='text/javascript' defer src='https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js'></script> <link rel='https://api.w.org/' href='https://www.javascripttutorial.net/wp-json/' /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.javascripttutorial.net/xmlrpc.php?rsd" /><link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://cdn.javascripttutorial.net/wp-includes/wlwmanifest.xml" /><meta name="generator" content="WordPress 5.4.2" /><link rel='shortlink' href='https://www.javascripttutorial.net/?p=85901' /><link rel="alternate" type="application/json+oembed" href="https://www.javascripttutorial.net/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.javascripttutorial.net%2Fes6%2Fpromise-chaining%2F" /><link rel="alternate" type="text/xml+oembed" href="https://www.javascripttutorial.net/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.javascripttutorial.net%2Fes6%2Fpromise-chaining%2F&#038;format=xml" /><link rel="pingback" href="https://www.javascripttutorial.net/xmlrpc.php" /> <script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-64856799-4', 'auto');
  ga('send', 'pageview');</script> <link rel="icon" href="https://cdn.javascripttutorial.net/wp-content/uploads/2020/02/favicon-150x150.png" sizes="32x32" /><link rel="icon" href="https://cdn.javascripttutorial.net/wp-content/uploads/2020/02/favicon-300x300.png" sizes="192x192" /><link rel="apple-touch-icon" href="https://cdn.javascripttutorial.net/wp-content/uploads/2020/02/favicon-300x300.png" /><meta name="msapplication-TileImage" content="https://cdn.javascripttutorial.net/wp-content/uploads/2020/02/favicon-300x300.png" /></head><body class="page-template-default page page-id-85901 page-child parent-pageid-382 custom-header header-image header-full-width content-sidebar genesis-breadcrumbs-visible genesis-footer-widgets-visible eleven40-pro-blue"><a href="javascript:void(0)" class="to-top" title="Back To Top"><i class="icon-angle-up"></i></a><div class="site-container"><header class="site-header"><div class="wrap"><div class="title-area"><p class="site-title"><a href="https://www.javascripttutorial.net/">JavaScript Tutorial</a></p></div><nav class="nav-primary" aria-label="Main"><div class="wrap"><ul id="menu-top-menu" class="menu genesis-nav-menu menu-primary"><li id="menu-item-48" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home menu-item-48"><a title="JavaScript Tutorial" href="https://www.javascripttutorial.net/"><span >Home</span></a></li><li id="menu-item-386" class="menu-item menu-item-type-post_type menu-item-object-page current-page-ancestor menu-item-386"><a title="ES6 Tutorial" href="https://www.javascripttutorial.net/es6/"><span >ES6</span></a></li><li id="menu-item-979" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-979"><a title="Latest JavaScript Features" href="https://www.javascripttutorial.net/es-next/"><span >ES.Next</span></a></li><li id="menu-item-85213" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85213"><a title="JavaScript BOM" href="https://www.javascripttutorial.net/javascript-bom/"><span >JS BOM</span></a></li><li id="menu-item-85214" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85214"><a title="JavaScript DOM" href="https://www.javascripttutorial.net/javascript-dom/"><span >JS DOM</span></a></li><li id="menu-item-86319" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-86319"><a title="JavaScript Snippets" href="https://www.javascripttutorial.net/snippets/"><span >Snippets</span></a></li></ul></div></nav></div></header><div class="site-inner"><div class="wrap"><div class="content-sidebar-wrap"><main class="content"><div class="breadcrumb"><span class="breadcrumb-link-wrap"><a class="breadcrumb-link" href="https://www.javascripttutorial.net/"><span class="breadcrumb-link-text-wrap">Home</span></a><meta ></span> / <span class="breadcrumb-link-wrap"><a class="breadcrumb-link" href="https://www.javascripttutorial.net/es6/"><span class="breadcrumb-link-text-wrap">ES6 Tutorial</span></a><meta ></span> / Promise Chaining</div><article class="post-85901 page type-page status-publish entry"><header class="entry-header"><h1 class="entry-title">Promise Chaining</h1><div class="ad"><div data-type="ad" data-publisher="javascripttutorial.net" data-format="300x250" data-zone="content_top"></div></div></header><div class="entry-content"><p><strong>Summary</strong>: in this tutorial, you will learn about the JavaScript promise chaining pattern that chains promises to execute asynchronous operations in sequence.</p><h2>Introduction to the JavaScript promise chaining</h2><p>The instance method of the <code><a href="https://www.javascripttutorial.net/es6/javascript-promises/">Promise</a></code> object such as <code>then()</code>, <code>catch()</code>, or <code>finally()</code> returns a separate promise object. <span style="font-size: inherit;">Therefore, you can call the promise&#8217;s instance method on the return </span><code>Promise</code><span style="font-size: inherit;">. The successively calling methods in this way is referred to as the promise chaining.</span></p><p>Consider the following example.</p><p>First, create a new promise that resolves to the value 10 after 3 seconds:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> p = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> {
    setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {
        resolve(<span class="hljs-number">10</span>);
    }, <span class="hljs-number">3</span> * <span class="hljs-number">100</span>);
});</code></div></pre><p>Note that we use the <code><a href="https://www.javascripttutorial.net/javascript-bom/javascript-settimeout/">setTimeout()</a></code> method to simulate an asynchronous operation.</p><p>Then, invoke the <code>then()</code> method on the promise:</p><pre class="wp-block-code"><div><code class="hljs language-javascript">p.then(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> {
    <span class="hljs-built_in">console</span>.log(result);
    <span class="hljs-keyword">return</span> result * <span class="hljs-number">2</span>;
});</code></div></pre><p>The callback passed to the <code>then()</code> method executes once the promise is resolved. In the callback, we showed the result of the promise and returned a new value: <code>result*2</code>.</p><p>Because the <code>then()</code> method returns a new <code>Promise</code> whose value is resolved to the return value, you can call the <code>then()</code> method on the return <code>Promise</code>, like this:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> p = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> {
    setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {
        resolve(<span class="hljs-number">10</span>);
    }, <span class="hljs-number">3</span> * <span class="hljs-number">100</span>);
});

p.then(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> {
    <span class="hljs-built_in">console</span>.log(result);
    <span class="hljs-keyword">return</span> result * <span class="hljs-number">2</span>;
}).then(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> {
    <span class="hljs-built_in">console</span>.log(result);
    <span class="hljs-keyword">return</span> result * <span class="hljs-number">3</span>;
});</code></div></pre><p>Output:</p><pre class="wp-block-code"><div><code class="hljs">10
20</code></div></pre><p>In this example, the return value in the first <code>then()</code> method is passed to the second <code>then()</code> method. You can keep calling the <code>then()</code> method successively as follows:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> p = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> {
    setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {
        resolve(<span class="hljs-number">10</span>);
    }, <span class="hljs-number">3</span> * <span class="hljs-number">100</span>);
});

p.then(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> {
    <span class="hljs-built_in">console</span>.log(result); <span class="hljs-comment">// 10</span>
    <span class="hljs-keyword">return</span> result * <span class="hljs-number">2</span>;
}).then(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> {
    <span class="hljs-built_in">console</span>.log(result); <span class="hljs-comment">// 20</span>
    <span class="hljs-keyword">return</span> result * <span class="hljs-number">3</span>;
}).then(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> {
    <span class="hljs-built_in">console</span>.log(result); <span class="hljs-comment">// 60</span>
    <span class="hljs-keyword">return</span> result * <span class="hljs-number">4</span>;
});
</code></div></pre><p>Output:</p><pre class="wp-block-code"><div><code class="hljs">10
20
60</code></div></pre><p>The following picture illustrates the promise chaining:</p><figure class="wp-block-image size-large"><noscript><img src="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Chaining.png" alt="JavaScript Promise Chaining" class="wp-image-85905" srcset="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Chaining.png 361w, https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Chaining-240x300.png 240w" sizes="(max-width: 361px) 100vw, 361px" /></noscript><img src='data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20210%20140%22%3E%3C/svg%3E' data-src="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Chaining.png" alt="JavaScript Promise Chaining" class="lazyload wp-image-85905" data-srcset="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Chaining.png 361w, https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Chaining-240x300.png 240w" data-sizes="(max-width: 361px) 100vw, 361px" /></figure><h2>Multiple handlers for a promise</h2><p>When you call the <code>then()</code> method multiple times on a promise, it is not promise chaining. For example:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> p = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> {
    setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {
        resolve(<span class="hljs-number">10</span>);
    }, <span class="hljs-number">3</span> * <span class="hljs-number">100</span>);
});

p.then(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> {
    <span class="hljs-built_in">console</span>.log(result); <span class="hljs-comment">// 10</span>
    <span class="hljs-keyword">return</span> result * <span class="hljs-number">2</span>;
})

p.then(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> {
    <span class="hljs-built_in">console</span>.log(result); <span class="hljs-comment">// 10</span>
    <span class="hljs-keyword">return</span> result * <span class="hljs-number">3</span>;
})

p.then(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> {
    <span class="hljs-built_in">console</span>.log(result); <span class="hljs-comment">// 10</span>
    <span class="hljs-keyword">return</span> result * <span class="hljs-number">4</span>;
});</code></div></pre><p>Output:</p><pre class="wp-block-code"><div><code class="hljs">10
10
10</code></div></pre><p>In this example, you have multiple handlers for one promise. These handlers have no relationships. They execute independently and also don&#8217;t pass the result from one to another like the promise chaining above.</p><p>The following picture illustrates a promise that has multiple handlers:</p><figure class="wp-block-image"><noscript><img src="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Chaining-multiple-handlers.png" alt="JavaScript Promise Chaining - multiple handlers" class="wp-image-85906" srcset="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Chaining-multiple-handlers.png 517w, https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Chaining-multiple-handlers-300x108.png 300w" sizes="(max-width: 517px) 100vw, 517px" /></noscript><img src='data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20210%20140%22%3E%3C/svg%3E' data-src="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Chaining-multiple-handlers.png" alt="JavaScript Promise Chaining - multiple handlers" class="lazyload wp-image-85906" data-srcset="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Chaining-multiple-handlers.png 517w, https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Chaining-multiple-handlers-300x108.png 300w" data-sizes="(max-width: 517px) 100vw, 517px" /></figure><p>In practice, you will rarely use the multiple handlers for one promise.</p><h2>Returning a Promise</h2><p>When you return a value in the <code>then()</code> method, the <code>then()</code> method returns a new <code>Promise</code> that immediately resolves to the return value.</p><p>Also, you can return a new promise in the <code>then()</code> method, like this:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> p = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> {
    setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {
        resolve(<span class="hljs-number">10</span>);
    }, <span class="hljs-number">3</span> * <span class="hljs-number">100</span>);
});

p.then(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> {
    <span class="hljs-built_in">console</span>.log(result);
    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> {
        setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {
            resolve(result * <span class="hljs-number">2</span>);
        }, <span class="hljs-number">3</span> * <span class="hljs-number">1000</span>);
    });
}).then(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> {
    <span class="hljs-built_in">console</span>.log(result);
    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> {
        setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {
            resolve(result * <span class="hljs-number">3</span>);
        }, <span class="hljs-number">3</span> * <span class="hljs-number">1000</span>);
    });
}).then(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(result));
</code></div></pre><p>Output:</p><pre class="wp-block-code"><div><code class="hljs">10
20
60</code></div></pre><p>This example shows 10, 20 and 60 after every 3 seconds. This code pattern allows you to execute some tasks in sequence.</p><p>The following refactors the above example:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">generateNumber</span>(<span class="hljs-params">num</span>) </span>{
    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> {
        setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {
            resolve(num);
        }, <span class="hljs-number">3</span> * <span class="hljs-number">1000</span>);
    });
}

generateNumber(<span class="hljs-number">10</span>)
    .then(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> {
        <span class="hljs-built_in">console</span>.log(result);
        <span class="hljs-keyword">return</span> generateNumber(result * <span class="hljs-number">2</span>);
    })
    .then(<span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> {
        <span class="hljs-built_in">console</span>.log(result);
        <span class="hljs-keyword">return</span> generateNumber(result * <span class="hljs-number">3</span>);
    })
    .then(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(result));
</code></div></pre><h3>Promise chaining syntax</h3><p>Sometimes, you have multiple asynchronous tasks that you want to execute in sequence. In addition, you need to pass the result of the previous step to the next one. In this case, you can use the following syntax:</p><pre class="wp-block-code"><div><code class="hljs language-javascript">step1()
    .then(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> step2(result))
    .then(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> step3(result))
    ...
</code></div></pre><p>If you need to pass the result from the previous task to the next one without passing the result, you use this syntax:</p><pre class="wp-block-code"><div><code class="hljs language-css"><span class="hljs-selector-tag">step1</span>()
    <span class="hljs-selector-class">.then</span>(<span class="hljs-selector-tag">step2</span>)
    <span class="hljs-selector-class">.then</span>(<span class="hljs-selector-tag">step3</span>)
    ...
</code></div></pre><p>Suppose that you want to perform the following asynchronous operations in sequence:</p><ol><li>Get the user from the database.</li><li>Get the services of the selected user.</li><li>Calculate the service cost from the user&#8217;s services.</li></ol><p>The following functions illustrate the three asynchronous operations:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getUser</span>(<span class="hljs-params">userId</span>) </span>{
    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> {
        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'Get the user from the database.'</span>);
        setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {
            resolve({
                <span class="hljs-attr">userId</span>: userId,
                <span class="hljs-attr">username</span>: <span class="hljs-string">'admin'</span>
            });
        }, <span class="hljs-number">1000</span>);
    })
}

<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getServices</span>(<span class="hljs-params">user</span>) </span>{
    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> {
        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`Get the services of <span class="hljs-subst">${user.username}</span> from the API.`</span>);
        setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {
            resolve([<span class="hljs-string">'Email'</span>, <span class="hljs-string">'VPN'</span>, <span class="hljs-string">'CDN'</span>]);
        }, <span class="hljs-number">3</span> * <span class="hljs-number">1000</span>);
    });
}

<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getServiceCost</span>(<span class="hljs-params">services</span>) </span>{
    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> {
        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`Calculate the service cost of <span class="hljs-subst">${services}</span>.`</span>);
        setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {
            resolve(services.length * <span class="hljs-number">100</span>);
        }, <span class="hljs-number">2</span> * <span class="hljs-number">1000</span>);
    });
}</code></div></pre><p>The following uses the promises to serialize the sequences:</p><pre class="wp-block-code"><div><code class="hljs language-css"><span class="hljs-selector-tag">getUser</span>(100)
    <span class="hljs-selector-class">.then</span>(<span class="hljs-selector-tag">getServices</span>)
    <span class="hljs-selector-class">.then</span>(<span class="hljs-selector-tag">getServiceCost</span>)
    <span class="hljs-selector-class">.then</span>(<span class="hljs-selector-tag">console</span><span class="hljs-selector-class">.log</span>);</code></div></pre><p>Output</p><pre class="wp-block-code"><div><code class="hljs language-javascript">Get the user <span class="hljs-keyword">from</span> the database.
Get the services <span class="hljs-keyword">of</span> admin <span class="hljs-keyword">from</span> the API.
Calculate the service cost <span class="hljs-keyword">of</span> Email,VPN,CDN.
<span class="hljs-number">300</span></code></div></pre><p>Note that ES2017 introduced the <a href="https://www.javascripttutorial.net/es-next/javascript-async-await/"><code>async</code>/<code>await</code></a> keywords that help you write cleaner code than using this promise chain technique.</p><p>In this tutorial, you have learned about the promise chain that executes multiple asynchronous tasks in sequence.</p><div class="helpful-block-content wth-theme-thumbs" data-title="" ><ul><li><span class="wth-title">Was this tutorial helpful ?</span></li><li><a data-post="85901" data-post-url="https://www.javascripttutorial.net/es6/promise-chaining/" data-post-title="Promise Chaining" data-response="1" href="#" class="wth-green-btn icon-thumbsup icon1-thumbs-up4">Yes</a><a data-response="0" data-post="85901" data-post-url="https://www.javascripttutorial.net/es6/promise-chaining/" data-post-title="Promise Chaining" href="#" class="wth-red-btn icon-thumbsdown icon1-thumbs-down4">No</a></li></ul></div></div><div class="ad"><div data-type="ad" data-publisher="javascripttutorial.net" data-format="300x250" data-zone="content_bottom"></div></div><div class="page-navigation"><div class="page-previous"><a class="prev-page-anchor" href="https://www.javascripttutorial.net/es6/javascript-promises/" rel="prev" title="The Definitive Guide to the JavaScript Promises"><span>Previous</span> The Definitive Guide to the JavaScript Promises</a></div><div class="page-next"><a class="next-page-anchor" href="https://www.javascripttutorial.net/es6/javascript-promise-all/" rel="next" title="JavaScript Promise.all()"><span>Next</span> JavaScript Promise.all()</a></div></div></article></main><aside class="sidebar sidebar-primary widget-area" role="complementary" aria-label="Primary Sidebar"><section id="search-4" class="widget widget_search"><div class="widget-wrap"><form class="search-form" method="get" action="https://www.javascripttutorial.net/" role="search"><input class="search-form-input" type="search" name="s" id="searchform-1" placeholder="Search this website"><input class="search-form-submit" type="submit" value="Search"><meta content="https://www.javascripttutorial.net/?s={s}"></form></div></section><section id="textblockswidget-2" class="widget widget_textblockswidget"><div class="widget-wrap"><div class="text-block sidebar-top"><div class="ad"><div data-type="ad" data-publisher="javascripttutorial.net" data-format="300x250" data-zone="sidebar_top"></div></div><div id="carbon-block"></div> <script>try {
  fetch(new Request("https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js", { method: 'HEAD', mode: 'no-cors' })).then(function(response) {
    return true;
  }).catch(function(e) {
    var carbonScript = document.createElement("script");
    carbonScript.src = "//cdn.carbonads.com/carbon.js?serve=CE7IC2QE&placement=wwwjavascripttutorialnet";
    carbonScript.id = "_carbonads_js";
    document.getElementById("carbon-block").appendChild(carbonScript);
  });
} catch (error) {
  console.log(error);
}</script></div></div></section><section id="nav_menu-10" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">New ES6 Syntax</h4><div class="menu-es6-new-syntax-container"><ul id="menu-es6-new-syntax" class="menu"><li id="menu-item-769" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-769"><a title="JavaScript let" href="https://www.javascripttutorial.net/es6/javascript-let/">JavaScript let</a></li><li id="menu-item-84751" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84751"><a title="Differences Between var and let" href="https://www.javascripttutorial.net/es6/difference-between-var-and-let/">var vs. let</a></li><li id="menu-item-770" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-770"><a title="JavaScript const" href="https://www.javascripttutorial.net/es6/javascript-const/">JavaScript const</a></li><li id="menu-item-771" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-771"><a title="JavaScript Template Literals" href="https://www.javascripttutorial.net/es6/javascript-template-literals/">Template Literals</a></li><li id="menu-item-772" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-772"><a title="Object Literal Syntax Extensions" href="https://www.javascripttutorial.net/es6/object-literal-extensions/">Object Literal Syntax Extensions</a></li><li id="menu-item-773" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-773"><a title="JavaScript Default Parameters" href="https://www.javascripttutorial.net/es6/javascript-default-parameters/">Default Parameters</a></li><li id="menu-item-774" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-774"><a title="JavaScript Rest Parameters" href="https://www.javascripttutorial.net/es6/javascript-rest-parameters/">Rest Parameters</a></li><li id="menu-item-775" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-775"><a title="JavaScript Spread Operator" href="https://www.javascripttutorial.net/es6/javascript-spread/">Spread Operator</a></li><li id="menu-item-776" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-776"><a title="JavaScript Destructuring" href="https://www.javascripttutorial.net/es6/destructuring/">Destructuring</a></li><li id="menu-item-777" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-777"><a title="JavaScript for…of Loop" href="https://www.javascripttutorial.net/es6/javascript-for-of/">for…of Loop</a></li><li id="menu-item-84759" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84759"><a title="A Quick Look at Octal and Binary Literals in ES6" href="https://www.javascripttutorial.net/es6/octal-and-binary-literals/">Octal and Binary Literals</a></li></ul></div></div></section><section id="nav_menu-11" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">ES6 Module &#038; Class</h4><div class="menu-es6-module-class-container"><ul id="menu-es6-module-class" class="menu"><li id="menu-item-84749" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84749"><a title="A Comprehensive Look at ES6 Modules" href="https://www.javascripttutorial.net/es6/es6-modules/">Modules</a></li><li id="menu-item-778" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-778"><a title="JavaScript Class Fundamentals" href="https://www.javascripttutorial.net/es6/javascript-class/">Class Fundamentals</a></li><li id="menu-item-779" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-779"><a title="JavaScript Inheritance" href="https://www.javascripttutorial.net/es6/javascript-inheritance/">Inheritance</a></li><li id="menu-item-780" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-780"><a title="JavaScript new.target Metaproperty" href="https://www.javascripttutorial.net/es6/javascript-new-target/">new.target</a></li></ul></div></div></section><section id="textblockswidget-3" class="widget widget_textblockswidget"><div class="widget-wrap"><div class="text-block sidebar-middle"><div class="ad"><div data-type="ad" data-publisher="javascripttutorial.net" data-format="300x250" data-zone="sidebar_middle"></div></div></div></div></section><section id="nav_menu-22" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">ES6 Arrow Functions</h4><div class="menu-es6-arrow-functions-container"><ul id="menu-es6-arrow-functions" class="menu"><li id="menu-item-86536" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-86536"><a title="An Introduction to JavaScript Arrow Functions" href="https://www.javascripttutorial.net/es6/javascript-arrow-function/">Arrow Functions</a></li><li id="menu-item-86535" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-86535"><a title="When you should not use the arrow functions" href="https://www.javascripttutorial.net/es6/when-you-should-not-use-arrow-functions/">When Not To Use Arrow Functions</a></li></ul></div></div></section><section id="nav_menu-16" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Iterators &#038; Generators</h4><div class="menu-es6-iterators-generators-container"><ul id="menu-es6-iterators-generators" class="menu"><li id="menu-item-84777" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84777"><a title="JavaScript Iterators" href="https://www.javascripttutorial.net/es6/javascript-iterator/">Iterators</a></li><li id="menu-item-84776" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84776"><a title="JavaScript Generators" href="https://www.javascripttutorial.net/es6/javascript-generators/">Generators</a></li><li id="menu-item-84824" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84824"><a title="JavaScript yield Keyword" href="https://www.javascripttutorial.net/es6/javascript-yield/">yield Keyword</a></li></ul></div></div></section><section id="nav_menu-17" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Promises</h4><div class="menu-es6-promises-container"><ul id="menu-es6-promises" class="menu"><li id="menu-item-84778" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84778"><a title="JavaScript Promises" href="https://www.javascripttutorial.net/es6/javascript-promises/">Promises</a></li><li id="menu-item-85916" class="menu-item menu-item-type-post_type menu-item-object-page current-menu-item page_item page-item-85901 current_page_item menu-item-85916"><a title="Promise Chaining" href="https://www.javascripttutorial.net/es6/promise-chaining/" aria-current="page">Promise Chaining</a></li><li id="menu-item-85939" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85939"><a title="JavaScript Promise.all()" href="https://www.javascripttutorial.net/es6/javascript-promise-all/">Promise.all()</a></li><li id="menu-item-85938" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85938"><a title="JavaScript Promise.race()" href="https://www.javascripttutorial.net/es6/javascript-promise-race/">Promise.race()</a></li><li id="menu-item-85915" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85915"><a title="Promise Error Handling" href="https://www.javascripttutorial.net/es6/promise-error-handling/">Promise Error Handling</a></li></ul></div></div></section><section id="nav_menu-12" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">ES6 Collections</h4><div class="menu-es6-collection-container"><ul id="menu-es6-collection" class="menu"><li id="menu-item-751" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-751"><a title="JavaScript Set" href="https://www.javascripttutorial.net/es6/javascript-set/">Set</a></li><li id="menu-item-752" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-752"><a title="Essential Guide to JavaScript Map" href="https://www.javascripttutorial.net/es6/javascript-map/">Map</a></li></ul></div></div></section><section id="nav_menu-18" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Array Extensions</h4><div class="menu-es6-array-extensions-container"><ul id="menu-es6-array-extensions" class="menu"><li id="menu-item-84855" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84855"><a title="JavaScript Array.of() Method" href="https://www.javascripttutorial.net/es6/javascript-array-of/">Array.of()</a></li><li id="menu-item-84854" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84854"><a title="JavaScript Array from() method" href="https://www.javascripttutorial.net/es6/javascript-array-from/">Array.from()</a></li><li id="menu-item-84875" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84875"><a title="JavaScript Array find() Method" href="https://www.javascripttutorial.net/es6/javascript-array-find/">Array find()</a></li><li id="menu-item-84874" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84874"><a title="Array findIndex()" href="https://www.javascripttutorial.net/es6/javascript-array-findindex/">Array findIndex()</a></li></ul></div></div></section><section id="nav_menu-20" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Object Extensions</h4><div class="menu-es6-object-extensions-container"><ul id="menu-es6-object-extensions" class="menu"><li id="menu-item-84937" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84937"><a title="JavaScript Object.assign()" href="https://www.javascripttutorial.net/es6/javascript-object-assign/">Object.assign()</a></li><li id="menu-item-84936" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84936"><a title="JavaScript Object.is()" href="https://www.javascripttutorial.net/es6/javascript-object-is/">Object.is()</a></li></ul></div></div></section><section id="nav_menu-21" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">String Extensions</h4><div class="menu-es6-string-extensions-container"><ul id="menu-es6-string-extensions" class="menu"><li id="menu-item-84949" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84949"><a title="JavaScript String startsWith" href="https://www.javascripttutorial.net/es6/javascript-string-startswith/">String startsWith()</a></li><li id="menu-item-84948" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84948"><a title="JavaScript String endsWith" href="https://www.javascripttutorial.net/es6/javascript-string-endswith/">String endsWith()</a></li><li id="menu-item-84953" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84953"><a title="JavaScript String includes()" href="https://www.javascripttutorial.net/es6/javascript-string-includes/">String includes()</a></li></ul></div></div></section><section id="nav_menu-19" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Proxy &#038; Reflection</h4><div class="menu-es6-proxy-reflection-container"><ul id="menu-es6-proxy-reflection" class="menu"><li id="menu-item-84857" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84857"><a title="JavaScript Proxy" href="https://www.javascripttutorial.net/es6/javascript-proxy/">Proxy</a></li><li id="menu-item-84856" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84856"><a title="JavaScript Reflection" href="https://www.javascripttutorial.net/es6/javascript-reflection/">Reflection</a></li></ul></div></div></section><section id="textblockswidget-4" class="widget widget_textblockswidget"><div class="widget-wrap"><div class="text-block sidebar-bottom"><div class="ad"><div data-type="ad" data-publisher="javascripttutorial.net" data-format="300x250" data-zone="sidebar_bottom"></div></div></div></div></section></aside></div></div></div><div class="footer-widgets"><div class="wrap"><div class="widget-area footer-widgets-1 footer-widget-area"><section id="text-2" class="widget widget_text"><div class="widget-wrap"><h4 class="widget-title widgettitle">About JavaScript Tutorial</h4><div class="textwidget">The JavaScript Tutorial website helps you learn JavaScript programming from scratch quickly and effectively.</div></div></section></div><div class="widget-area footer-widgets-2 footer-widget-area"><section id="recently_created_pages-2" class="widget Recently_Created_Pages"><div class="widget-wrap"><h4 class="widget-title widgettitle">Recent Tutorials</h4><ul><li class='page_item page-item-87351'><a href='https://www.javascripttutorial.net/nodejs-tutorial/npm-publish/' title='Npm Publish'>Npm Publish</a></li><li class='page_item page-item-87344'><a href='https://www.javascripttutorial.net/nodejs-tutorial/npm-uninstall/' title='Npm Uninstall'>Npm Uninstall</a></li><li class='page_item page-item-87340'><a href='https://www.javascripttutorial.net/nodejs-tutorial/npm-view/' title='Npm View'>Npm View</a></li><li class='page_item page-item-87329'><a href='https://www.javascripttutorial.net/nodejs-tutorial/npm-list/' title='Npm List'>Npm List</a></li><li class='page_item page-item-87319'><a href='https://www.javascripttutorial.net/nodejs-tutorial/npm-semantic-versioning/' title='Npm Semantic Versioning'>Npm Semantic Versioning</a></li></ul></div></section></div><div class="widget-area footer-widgets-3 footer-widget-area"><section id="nav_menu-2" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Site Links</h4><div class="menu-footer-container"><ul id="menu-footer" class="menu"><li id="menu-item-30" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-30"><a title="Want to know more about us?" href="https://www.javascripttutorial.net/about/">About Us</a></li><li id="menu-item-29" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-29"><a title="Do you have any suggestions or feedback? Just contact us" href="https://www.javascripttutorial.net/contact/">Contact Us</a></li><li id="menu-item-28" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-28"><a title="Privacy Policy" href="https://www.javascripttutorial.net/privacy-policy/">Privacy Policy</a></li></ul></div></div></section></div></div></div><footer class="site-footer"><div class="wrap"><div class="creds"><p>Copyright &#x000A9;&nbsp;2020 by JavaScript Tutorial Website. All Right Reserved.</div></div></footer></div><script type='text/javascript'>function _dmBootstrap(file) {
    var _dma = document.createElement('script');
    _dma.type = 'text/javascript';
    _dma.async = true;
    _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
}
function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js'); }
(function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000); })();</script><noscript><style>.lazyload{display:none;}</style></noscript><script data-noptimize="1">window.lazySizesConfig=window.lazySizesConfig||{};window.lazySizesConfig.loadMode=1;</script><script async data-noptimize="1" src='https://cdn.javascripttutorial.net//wp-content/plugins/autoptimize/classes/external/js/lazysizes.min.js?ao_version=2.7.3'></script> <script type='text/javascript'>var wth_js_lang = {"ajax_url":"https:\/\/www.javascripttutorial.net\/wp-admin\/admin-ajax.php","nonce":"b0846a824b","confirm":"Are you sure to delete item?","positive_feedback":null,"positive_feedback_option":"feedback_messege","positive_feedback_required":null,"negative_feedback":"true","negative_feedback_required":"true","wth_title_nothank":"What was wrong? Please help us to improve","wth_title_yesthank":"Well Done! Please leave your positive feedback.","wth_thank_you":"Thank You for your feedback!","submit_text":"Submit","wth_ga_enable":"","wth_ga_category":"Was This Helpful?","wth_ga_positive":"Positive Reviews","wth_ga_negative":"Negative Reviews","wth_share_ask":"Awesome, share it:","wth_fb_share":"Share","wth_twitter_share":"Tweet"};</script> <script defer src="https://cdn.javascripttutorial.net/wp-content/cache/autoptimize/js/autoptimize_8e629f2ae4d14517d0dd9cc7feb43e91.js"></script></body></html>