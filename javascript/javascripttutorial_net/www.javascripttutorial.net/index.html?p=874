<!DOCTYPE html><html lang="en-US"><head ><meta charset="UTF-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link media="all" href="https://cdn.javascripttutorial.net/wp-content/cache/autoptimize/css/autoptimize_4b6c23c49276886eaa08de07eb9dc8e2.css" rel="stylesheet" /><title>The Definitive Guide to the JavaScript Promises</title><meta name="description" content="In this tutorial, you will learn how to use JavaScript promises to improve asynchronous programming." /><meta name="robots" content="index, follow" /><meta name="googlebot" content="index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1" /><meta name="bingbot" content="index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1" /><link rel="canonical" href="https://www.javascripttutorial.net/es6/javascript-promises/" /><meta property="og:locale" content="en_US" /><meta property="og:type" content="article" /><meta property="og:title" content="The Definitive Guide to the JavaScript Promises" /><meta property="og:description" content="In this tutorial, you will learn how to use JavaScript promises to improve asynchronous programming." /><meta property="og:url" content="https://www.javascripttutorial.net/es6/javascript-promises/" /><meta property="og:site_name" content="JavaScript Tutorial" /><meta property="article:modified_time" content="2020-03-11T08:34:07+00:00" /><meta property="og:image" content="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Pending.png" /><meta name="twitter:card" content="summary" /> <script type="application/ld+json" class="yoast-schema-graph">{"@context":"https://schema.org","@graph":[{"@type":"WebSite","@id":"https://www.javascripttutorial.net/#website","url":"https://www.javascripttutorial.net/","name":"JavaScript Tutorial","description":"A comprehensive JavaScript Tutorial","potentialAction":[{"@type":"SearchAction","target":"https://www.javascripttutorial.net/?s={search_term_string}","query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https://www.javascripttutorial.net/es6/javascript-promises/#primaryimage","inLanguage":"en-US","url":"https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Pending.png","width":437,"height":92,"caption":"JavaScript Promise - Pending"},{"@type":"WebPage","@id":"https://www.javascripttutorial.net/es6/javascript-promises/#webpage","url":"https://www.javascripttutorial.net/es6/javascript-promises/","name":"The Definitive Guide to the JavaScript Promises","isPartOf":{"@id":"https://www.javascripttutorial.net/#website"},"primaryImageOfPage":{"@id":"https://www.javascripttutorial.net/es6/javascript-promises/#primaryimage"},"datePublished":"2016-11-02T13:54:46+00:00","dateModified":"2020-03-11T08:34:07+00:00","description":"In this tutorial, you will learn how to use JavaScript promises to improve asynchronous programming.","inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https://www.javascripttutorial.net/es6/javascript-promises/"]}]}]}</script> <link rel='dns-prefetch' href='//ajax.googleapis.com' /><link rel="alternate" type="application/rss+xml" title="JavaScript Tutorial &raquo; Feed" href="https://www.javascripttutorial.net/feed/" /><link rel="alternate" type="application/rss+xml" title="JavaScript Tutorial &raquo; Comments Feed" href="https://www.javascripttutorial.net/comments/feed/" /> <script type='text/javascript' defer src='https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js'></script> <link rel='https://api.w.org/' href='https://www.javascripttutorial.net/wp-json/' /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.javascripttutorial.net/xmlrpc.php?rsd" /><link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://cdn.javascripttutorial.net/wp-includes/wlwmanifest.xml" /><meta name="generator" content="WordPress 5.4.2" /><link rel='shortlink' href='https://www.javascripttutorial.net/?p=874' /><link rel="alternate" type="application/json+oembed" href="https://www.javascripttutorial.net/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.javascripttutorial.net%2Fes6%2Fjavascript-promises%2F" /><link rel="alternate" type="text/xml+oembed" href="https://www.javascripttutorial.net/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.javascripttutorial.net%2Fes6%2Fjavascript-promises%2F&#038;format=xml" /><link rel="pingback" href="https://www.javascripttutorial.net/xmlrpc.php" /> <script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-64856799-4', 'auto');
  ga('send', 'pageview');</script> <link rel="icon" href="https://cdn.javascripttutorial.net/wp-content/uploads/2020/02/favicon-150x150.png" sizes="32x32" /><link rel="icon" href="https://cdn.javascripttutorial.net/wp-content/uploads/2020/02/favicon-300x300.png" sizes="192x192" /><link rel="apple-touch-icon" href="https://cdn.javascripttutorial.net/wp-content/uploads/2020/02/favicon-300x300.png" /><meta name="msapplication-TileImage" content="https://cdn.javascripttutorial.net/wp-content/uploads/2020/02/favicon-300x300.png" /></head><body class="page-template-default page page-id-874 page-child parent-pageid-382 custom-header header-image header-full-width content-sidebar genesis-breadcrumbs-visible genesis-footer-widgets-visible eleven40-pro-blue"><a href="javascript:void(0)" class="to-top" title="Back To Top"><i class="icon-angle-up"></i></a><div class="site-container"><header class="site-header"><div class="wrap"><div class="title-area"><p class="site-title"><a href="https://www.javascripttutorial.net/">JavaScript Tutorial</a></p></div><nav class="nav-primary" aria-label="Main"><div class="wrap"><ul id="menu-top-menu" class="menu genesis-nav-menu menu-primary"><li id="menu-item-48" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home menu-item-48"><a title="JavaScript Tutorial" href="https://www.javascripttutorial.net/"><span >Home</span></a></li><li id="menu-item-386" class="menu-item menu-item-type-post_type menu-item-object-page current-page-ancestor menu-item-386"><a title="ES6 Tutorial" href="https://www.javascripttutorial.net/es6/"><span >ES6</span></a></li><li id="menu-item-979" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-979"><a title="Latest JavaScript Features" href="https://www.javascripttutorial.net/es-next/"><span >ES.Next</span></a></li><li id="menu-item-85213" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85213"><a title="JavaScript BOM" href="https://www.javascripttutorial.net/javascript-bom/"><span >JS BOM</span></a></li><li id="menu-item-85214" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85214"><a title="JavaScript DOM" href="https://www.javascripttutorial.net/javascript-dom/"><span >JS DOM</span></a></li><li id="menu-item-86319" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-86319"><a title="JavaScript Snippets" href="https://www.javascripttutorial.net/snippets/"><span >Snippets</span></a></li></ul></div></nav></div></header><div class="site-inner"><div class="wrap"><div class="content-sidebar-wrap"><main class="content"><div class="breadcrumb"><span class="breadcrumb-link-wrap"><a class="breadcrumb-link" href="https://www.javascripttutorial.net/"><span class="breadcrumb-link-text-wrap">Home</span></a><meta ></span> / <span class="breadcrumb-link-wrap"><a class="breadcrumb-link" href="https://www.javascripttutorial.net/es6/"><span class="breadcrumb-link-text-wrap">ES6 Tutorial</span></a><meta ></span> / The Definitive Guide to the JavaScript Promises</div><article class="post-874 page type-page status-publish entry"><header class="entry-header"><h1 class="entry-title">The Definitive Guide to the JavaScript Promises</h1><div class="ad"><div data-type="ad" data-publisher="javascripttutorial.net" data-format="300x250" data-zone="content_top"></div></div></header><div class="entry-content"><p><strong>Summary</strong>: in this tutorial, you will learn about JavaScript promises, what they are, and how to use them effectively.</p><h2>Understanding JavaScript Promises</h2><p>In JavaScript, a promise is an object that returns a value which you hope to receive in the future, but not now.</p><p>Because the value will be returned by the promise in the future, the promise is very well-suited for handling asynchronous operations.</p><p>It&#8217;ll be easier to understand the concept of JavaScript promises through an analogy.</p><p>Suppose that you promise to complete learning JavaScript by next month.</p><p>You don&#8217;t know if you will spend your time and effort to learn JavaScript until next month. You can either be completing learning JavaScript or not.</p><p>A promise has three states:</p><ul><li>Pending: you don&#8217;t know if you will complete learning JavaScript by the next month.</li><li>Fulfilled: you complete learning JavaScript by the next month.</li><li>Rejected: you don&#8217;t learn JavaScript at all.</li></ul><p>A promise starts in the pending state which indicates that the promise hasn&#8217;t completed. It ends with either fulfilled (successful) or rejected (failed) state.</p><h2>Creating a promise: the <code>Promise</code> constructor</h2><p>To create a promise in JavaScript, you use the <code>Promise</code> constructor:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> completed = <span class="hljs-literal">true</span>;

<span class="hljs-keyword">let</span> learnJS = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>{
    <span class="hljs-keyword">if</span> (completed) {
        resolve(<span class="hljs-string">"I have completed learning JS."</span>);
    } <span class="hljs-keyword">else</span> {
        reject(<span class="hljs-string">"I haven't completed learning JS yet."</span>);
    }
});
</code></div></pre><p>The <code>Promise</code> constructor accepts a function as an argument. This function is called the <code>executor</code>.</p><p>The executor accepts two functions with the names, by convention, <code>resolve()</code> and <code>reject()</code>. </p><p>When you call the <code>new Promise(executor)</code>, the <code>executor</code> is called automatically. </p><p>Inside the executor, you manually call the <code>resolve()</code> function if the executor is completed successfully and invoke the <code>reject()</code> function in case of an error occurs.</p><p>If you embed the above JavaScript code in an HTML document and check the console window, you will see that the promise is resolved because the <code>completed</code> variable is set to <code>true</code>.</p><p>To see the pending state of the promise, we wrap the code of the executor in the <code><a href="https://www.javascripttutorial.net/javascript-bom/javascript-settimeout/">setTimeout()</a></code> function:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> completed = <span class="hljs-literal">true</span>;

<span class="hljs-keyword">let</span> learnJS = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>{
    setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {
        <span class="hljs-keyword">if</span> (completed) {
            resolve(<span class="hljs-string">"I have completed learning JS."</span>);
        } <span class="hljs-keyword">else</span> {
            reject(<span class="hljs-string">"I haven't completed learning JS yet."</span>);
        }
    }, <span class="hljs-number">3</span> * <span class="hljs-number">1000</span>);
});</code></div></pre><p>Now, you see that the promise starts with the <code>pending</code> state with the value is <code>undefined</code>. The promise value will be returned later once the promise is completed.</p><p><noscript><img class="alignnone wp-image-85846 size-full" src="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Pending.png" alt="JavaScript Promise - Pending" width="437" height="92" srcset="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Pending.png 437w, https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Pending-300x63.png 300w" sizes="(max-width: 437px) 100vw, 437px" /></noscript><img class="lazyload alignnone wp-image-85846 size-full" src='data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20437%2092%22%3E%3C/svg%3E' data-src="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Pending.png" alt="JavaScript Promise - Pending" width="437" height="92" data-srcset="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Pending.png 437w, https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Pending-300x63.png 300w" data-sizes="(max-width: 437px) 100vw, 437px" /></p><p>After about 3 seconds, type the <code>learnJS</code> in the console window, you will see that the state of the promise becomes <code>resolved</code> and the promise value is the string that we passed to the <code>resolve()</code> function.</p><p><noscript><img class="alignnone wp-image-85847 size-full" src="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Resolved.png" alt="JavaScript Promise - Resolved" width="469" height="196" srcset="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Resolved.png 469w, https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Resolved-300x125.png 300w" sizes="(max-width: 469px) 100vw, 469px" /></noscript><img class="lazyload alignnone wp-image-85847 size-full" src='data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20469%20196%22%3E%3C/svg%3E' data-src="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Resolved.png" alt="JavaScript Promise - Resolved" width="469" height="196" data-srcset="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Resolved.png 469w, https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Resolved-300x125.png 300w" data-sizes="(max-width: 469px) 100vw, 469px" /></p><p>So calling the <code>resolve()</code> function moves the promise object to the fulfilled state. If you change the value of the <code>completed</code> variable to <code>false</code> and run the script again:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> completed = <span class="hljs-literal">false</span>;</code></div></pre><p>You will see an error message and the state of the promise becomes <code>rejected</code> after 3 seconds:</p><p><noscript><img class="alignnone wp-image-85849 size-full" src="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Rejected.png" alt="JavaScript Promise - Rejected" width="497" height="138" srcset="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Rejected.png 497w, https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Rejected-300x83.png 300w" sizes="(max-width: 497px) 100vw, 497px" /></noscript><img class="lazyload alignnone wp-image-85849 size-full" src='data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20497%20138%22%3E%3C/svg%3E' data-src="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Rejected.png" alt="JavaScript Promise - Rejected" width="497" height="138" data-srcset="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Rejected.png 497w, https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-Rejected-300x83.png 300w" data-sizes="(max-width: 497px) 100vw, 497px" /></p><p>In other words, calling the <code>reject()</code> method moves the promise object to the <code>rejected</code> state.</p><p>The following picture illustrates the states of a promise and the effect of calling the <code>resolve()</code> and <code>reject()</code> functions:</p><p><noscript><img class="alignnone wp-image-85858 size-full" src="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-state.png" alt="" width="587" height="389" srcset="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-state.png 587w, https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-state-300x199.png 300w" sizes="(max-width: 587px) 100vw, 587px" /></noscript><img class="lazyload alignnone wp-image-85858 size-full" src='data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20587%20389%22%3E%3C/svg%3E' data-src="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-state.png" alt="" width="587" height="389" data-srcset="https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-state.png 587w, https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/JavaScript-Promise-state-300x199.png 300w" data-sizes="(max-width: 587px) 100vw, 587px" /></p><p>Once the promise reaches either fulfilled state or rejected state, it stays in that state and can&#8217;t switch.</p><p>In other words, a promise cannot go from the fulfilled state to the rejected state and vice versa. It also cannot go back from the fulfilled state or rejected state to the pending state.</p><p>If the promise reaches fulfilled state or rejected state, the promise is resolved.</p><p>Once a new <code>Promise</code> object is created, it is in the pending state until it is resolved. To schedule a callback when the promise is either resolved or rejected, you call the methods of the <code>Promise</code> object: <code>then()</code>, <code>catch()</code>, and <code>finally()</code>.</p><h2>Consuming a Promise: then, catch, finally</h2><h3>1) The <code>then()</code> method</h3><p>The <code>then()</code> method is used to schedule a callback to be executed when the promise is successfully resolved.</p><p>The <code>then()</code> method takes two <a href="https://www.javascripttutorial.net/javascript-callback/">callback functions</a>:</p><pre class="wp-block-code"><div><code class="hljs language-css"><span class="hljs-selector-tag">promiseObject</span><span class="hljs-selector-class">.then</span>(<span class="hljs-selector-tag">onFulfilled</span>, <span class="hljs-selector-tag">onRejected</span>);</code></div></pre><p>The <code>onFulfilled</code> callback is called if the promise is fulfilled. The <code>onRejected</code> callback is called when the promise is rejected.</p><p>The following function returns a <code>Promise</code> object:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">makePromise</span>(<span class="hljs-params">completed</span>) </span>{
    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>{
        setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {
            <span class="hljs-keyword">if</span> (completed) {
                resolve(<span class="hljs-string">"I have completed learning JS."</span>);
            } <span class="hljs-keyword">else</span> {
                reject(<span class="hljs-string">"I haven't completed learning JS yet."</span>);
            }
        }, <span class="hljs-number">3</span> * <span class="hljs-number">1000</span>);
    });
}</code></div></pre><p>And the following calls the <code>makePromise()</code> function and invokes the <code>then()</code> method:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> learnJS = makePromise(<span class="hljs-literal">true</span>);

learnJS.then(
    <span class="hljs-function"><span class="hljs-params">success</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(success),
    reason =&gt; <span class="hljs-built_in">console</span>.log(reason)
);</code></div></pre><p>It is possible to schedule a callback to handle the fulfilled or rejected case only. The following runs the fulfilled case:</p><pre class="wp-block-code"><div><code class="hljs language-javascript">learnJS.then(
    <span class="hljs-function"><span class="hljs-params">value</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(value)
);</code></div></pre><p>And the following schedules a callback to handle the rejected case:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> masterJS = makePromise(<span class="hljs-literal">false</span>);

masterJS.then(
    <span class="hljs-literal">undefined</span>,
    reason =&gt; <span class="hljs-built_in">console</span>.log(reason)
);</code></div></pre><p>Note that you must pass <code>undefined</code> to the <code>then()</code> method as the first argument.</p><h3>2) The <code>catch()</code> method</h3><p>If you want to schedule a callback to be executed when the promise is rejected, you can use the <code>catch()</code> method of the <code>Promise</code> object:</p><pre class="wp-block-code"><div><code class="hljs language-javascript">learnJS.catch(
    <span class="hljs-function"><span class="hljs-params">reason</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(reason)
);</code></div></pre><p>Internally, the <code>catch()</code> method invokes the <code>then(undefined, onRejected)</code> method.</p><h3>3) The <code>finally()</code> method</h3><p>Sometimes, you want to execute the same piece of code whether the promise is fulfilled or rejected. For example:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createApp</span>(<span class="hljs-params"></span>) </span>{
    <span class="hljs-comment">// ...</span>
}

learnJS
    .then(
        <span class="hljs-function">(<span class="hljs-params">success</span>) =&gt;</span> {
            <span class="hljs-built_in">console</span>.log(success);
            createApp();
        }
    ).catch(
        <span class="hljs-function">(<span class="hljs-params">reason</span>) =&gt;</span> {
            <span class="hljs-built_in">console</span>.log(reason);
            createApp();
        }
    );
</code></div></pre><p>As you can see, the <code>createApp()</code> function call is duplicated in both <code>then()</code> and <code>catch()</code> methods.</p><p>To remove this duplicate and execute the <code>createApp()</code> whether the promise is fulfilled or rejected, you use the <code>finally()</code> method, like this:</p><pre class="wp-block-code"><div><code class="hljs language-javascript">learnJS
    .then(<span class="hljs-function"><span class="hljs-params">success</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(success))
    .catch(<span class="hljs-function"><span class="hljs-params">reason</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(reason))
    .finally(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> createApp());</code></div></pre><h2>Practical JavaScript Promise example</h2><p>We&#8217;ll show you how to load a JSON file from the server and display the message on a webpage.</p><p>Suppose that we have the following JSON file: https://www.javascripttutorial.net/sample/promise/api.json</p><p>Here are the contents of the api.json file:</p><pre class="wp-block-code"><div><code class="hljs language-json">{
    <span class="hljs-attr">"message"</span>: <span class="hljs-string">"JavaScript Promise Demo"</span>
}</code></div></pre><p>The following shows the HTML page that contains a button. When you click the button, the page loads data from the JSON file and shows the message:</p><pre class="wp-block-code"><div><code class="hljs language-xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"utf-8"</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>JavaScript Promise Demo<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"css/style.css"</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"container"</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"message"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"btnGet"</span>&gt;</span>Get Message<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"js/promise-demo.js"</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></div></pre><p>To load the JSON file, we&#8217;ll use the <code>XMLHttpRequest</code> object. Later, you will learn how to use the <code>fetch()</code> method.</p><p>The following function returns a Promise object that loads data from a remote file:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">load</span>(<span class="hljs-params">url</span>) </span>{
    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>{
        <span class="hljs-keyword">const</span> request = <span class="hljs-keyword">new</span> XMLHttpRequest();

        request.onreadystatechange = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>{
            <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.readyState === <span class="hljs-number">4</span>) {
                <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.status == <span class="hljs-number">200</span>) {
                    resolve(<span class="hljs-keyword">this</span>.response);
                } <span class="hljs-keyword">else</span> {
                    reject(<span class="hljs-keyword">this</span>.status);
                }
            }
        }
        request.open(<span class="hljs-string">'GET'</span>, url, <span class="hljs-literal">true</span>);
        request.send();
    });
}</code></div></pre><p>Inside the executor, we called <code>resolve()</code> function and passed in the response if the HTTP status code is 200, otherwise, we invoked the <code>reject()</code> function and passed in the  HTTP status code.</p><p>Register the button click event listener and call the <code>then()</code> method on the Promise. If the load is successful, then we show the message returned from the server. Otherwise, we show the error message with the HTTP status code.</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">const</span> btn = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">'#btnGet'</span>);
<span class="hljs-keyword">const</span> msg = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">'#message'</span>);
btn.onclick = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{
    load(<span class="hljs-string">'https://www.javascripttutorial.net/sample/promise/api.json'</span>)
        .then(
            <span class="hljs-function"><span class="hljs-params">response</span> =&gt;</span> {
                <span class="hljs-keyword">const</span> result = <span class="hljs-built_in">JSON</span>.parse(response);
                msg.innerHTML = result.message;
            },
            error =&gt; msg.innerHTML = <span class="hljs-string">`Error getting the message, HTTP status: <span class="hljs-subst">${error}</span>`</span>
        );
}</code></div></pre><div class="output-cont"><div class="output"> <iframe src="/sample/promise/promise-demo.html" height="300"></iframe></div></div><h2>Summary</h2><ul><li>A promise is an object that returns a value in the future.</li><li>A promise starts in the pending state and ends in either fulfilled state or rejected state.</li><li>Use <code>then()</code> method to schedule a callback to be executed when the promise is fullfiled, and <code>catch()</code> method to schedule a callback to be invoked when the promise is rejected.</li><li>Place the code that you want to execute in the <code>finally()</code> method whether the promise is fulfilled or rejected.</li></ul><div class="helpful-block-content wth-theme-thumbs" data-title="" ><ul><li><span class="wth-title">Was this tutorial helpful ?</span></li><li><a data-post="874" data-post-url="https://www.javascripttutorial.net/es6/javascript-promises/" data-post-title="The Definitive Guide to the JavaScript Promises" data-response="1" href="#" class="wth-green-btn icon-thumbsup icon1-thumbs-up4">Yes</a><a data-response="0" data-post="874" data-post-url="https://www.javascripttutorial.net/es6/javascript-promises/" data-post-title="The Definitive Guide to the JavaScript Promises" href="#" class="wth-red-btn icon-thumbsdown icon1-thumbs-down4">No</a></li></ul></div></div><div class="ad"><div data-type="ad" data-publisher="javascripttutorial.net" data-format="300x250" data-zone="content_bottom"></div></div><div class="page-navigation"><div class="page-previous"><a class="prev-page-anchor" href="https://www.javascripttutorial.net/es6/javascript-yield/" rel="prev" title="JavaScript yield"><span>Previous</span> JavaScript yield</a></div><div class="page-next"><a class="next-page-anchor" href="https://www.javascripttutorial.net/es6/promise-chaining/" rel="next" title="Promise Chaining"><span>Next</span> Promise Chaining</a></div></div></article></main><aside class="sidebar sidebar-primary widget-area" role="complementary" aria-label="Primary Sidebar"><section id="search-4" class="widget widget_search"><div class="widget-wrap"><form class="search-form" method="get" action="https://www.javascripttutorial.net/" role="search"><input class="search-form-input" type="search" name="s" id="searchform-1" placeholder="Search this website"><input class="search-form-submit" type="submit" value="Search"><meta content="https://www.javascripttutorial.net/?s={s}"></form></div></section><section id="textblockswidget-2" class="widget widget_textblockswidget"><div class="widget-wrap"><div class="text-block sidebar-top"><div class="ad"><div data-type="ad" data-publisher="javascripttutorial.net" data-format="300x250" data-zone="sidebar_top"></div></div><div id="carbon-block"></div> <script>try {
  fetch(new Request("https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js", { method: 'HEAD', mode: 'no-cors' })).then(function(response) {
    return true;
  }).catch(function(e) {
    var carbonScript = document.createElement("script");
    carbonScript.src = "//cdn.carbonads.com/carbon.js?serve=CE7IC2QE&placement=wwwjavascripttutorialnet";
    carbonScript.id = "_carbonads_js";
    document.getElementById("carbon-block").appendChild(carbonScript);
  });
} catch (error) {
  console.log(error);
}</script></div></div></section><section id="nav_menu-10" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">New ES6 Syntax</h4><div class="menu-es6-new-syntax-container"><ul id="menu-es6-new-syntax" class="menu"><li id="menu-item-769" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-769"><a title="JavaScript let" href="https://www.javascripttutorial.net/es6/javascript-let/">JavaScript let</a></li><li id="menu-item-84751" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84751"><a title="Differences Between var and let" href="https://www.javascripttutorial.net/es6/difference-between-var-and-let/">var vs. let</a></li><li id="menu-item-770" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-770"><a title="JavaScript const" href="https://www.javascripttutorial.net/es6/javascript-const/">JavaScript const</a></li><li id="menu-item-771" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-771"><a title="JavaScript Template Literals" href="https://www.javascripttutorial.net/es6/javascript-template-literals/">Template Literals</a></li><li id="menu-item-772" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-772"><a title="Object Literal Syntax Extensions" href="https://www.javascripttutorial.net/es6/object-literal-extensions/">Object Literal Syntax Extensions</a></li><li id="menu-item-773" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-773"><a title="JavaScript Default Parameters" href="https://www.javascripttutorial.net/es6/javascript-default-parameters/">Default Parameters</a></li><li id="menu-item-774" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-774"><a title="JavaScript Rest Parameters" href="https://www.javascripttutorial.net/es6/javascript-rest-parameters/">Rest Parameters</a></li><li id="menu-item-775" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-775"><a title="JavaScript Spread Operator" href="https://www.javascripttutorial.net/es6/javascript-spread/">Spread Operator</a></li><li id="menu-item-776" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-776"><a title="JavaScript Destructuring" href="https://www.javascripttutorial.net/es6/destructuring/">Destructuring</a></li><li id="menu-item-777" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-777"><a title="JavaScript for…of Loop" href="https://www.javascripttutorial.net/es6/javascript-for-of/">for…of Loop</a></li><li id="menu-item-84759" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84759"><a title="A Quick Look at Octal and Binary Literals in ES6" href="https://www.javascripttutorial.net/es6/octal-and-binary-literals/">Octal and Binary Literals</a></li></ul></div></div></section><section id="nav_menu-11" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">ES6 Module &#038; Class</h4><div class="menu-es6-module-class-container"><ul id="menu-es6-module-class" class="menu"><li id="menu-item-84749" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84749"><a title="A Comprehensive Look at ES6 Modules" href="https://www.javascripttutorial.net/es6/es6-modules/">Modules</a></li><li id="menu-item-778" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-778"><a title="JavaScript Class Fundamentals" href="https://www.javascripttutorial.net/es6/javascript-class/">Class Fundamentals</a></li><li id="menu-item-779" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-779"><a title="JavaScript Inheritance" href="https://www.javascripttutorial.net/es6/javascript-inheritance/">Inheritance</a></li><li id="menu-item-780" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-780"><a title="JavaScript new.target Metaproperty" href="https://www.javascripttutorial.net/es6/javascript-new-target/">new.target</a></li></ul></div></div></section><section id="textblockswidget-3" class="widget widget_textblockswidget"><div class="widget-wrap"><div class="text-block sidebar-middle"><div class="ad"><div data-type="ad" data-publisher="javascripttutorial.net" data-format="300x250" data-zone="sidebar_middle"></div></div></div></div></section><section id="nav_menu-22" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">ES6 Arrow Functions</h4><div class="menu-es6-arrow-functions-container"><ul id="menu-es6-arrow-functions" class="menu"><li id="menu-item-86536" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-86536"><a title="An Introduction to JavaScript Arrow Functions" href="https://www.javascripttutorial.net/es6/javascript-arrow-function/">Arrow Functions</a></li><li id="menu-item-86535" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-86535"><a title="When you should not use the arrow functions" href="https://www.javascripttutorial.net/es6/when-you-should-not-use-arrow-functions/">When Not To Use Arrow Functions</a></li></ul></div></div></section><section id="nav_menu-16" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Iterators &#038; Generators</h4><div class="menu-es6-iterators-generators-container"><ul id="menu-es6-iterators-generators" class="menu"><li id="menu-item-84777" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84777"><a title="JavaScript Iterators" href="https://www.javascripttutorial.net/es6/javascript-iterator/">Iterators</a></li><li id="menu-item-84776" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84776"><a title="JavaScript Generators" href="https://www.javascripttutorial.net/es6/javascript-generators/">Generators</a></li><li id="menu-item-84824" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84824"><a title="JavaScript yield Keyword" href="https://www.javascripttutorial.net/es6/javascript-yield/">yield Keyword</a></li></ul></div></div></section><section id="nav_menu-17" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Promises</h4><div class="menu-es6-promises-container"><ul id="menu-es6-promises" class="menu"><li id="menu-item-84778" class="menu-item menu-item-type-post_type menu-item-object-page current-menu-item page_item page-item-874 current_page_item menu-item-84778"><a title="JavaScript Promises" href="https://www.javascripttutorial.net/es6/javascript-promises/" aria-current="page">Promises</a></li><li id="menu-item-85916" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85916"><a title="Promise Chaining" href="https://www.javascripttutorial.net/es6/promise-chaining/">Promise Chaining</a></li><li id="menu-item-85939" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85939"><a title="JavaScript Promise.all()" href="https://www.javascripttutorial.net/es6/javascript-promise-all/">Promise.all()</a></li><li id="menu-item-85938" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85938"><a title="JavaScript Promise.race()" href="https://www.javascripttutorial.net/es6/javascript-promise-race/">Promise.race()</a></li><li id="menu-item-85915" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85915"><a title="Promise Error Handling" href="https://www.javascripttutorial.net/es6/promise-error-handling/">Promise Error Handling</a></li></ul></div></div></section><section id="nav_menu-12" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">ES6 Collections</h4><div class="menu-es6-collection-container"><ul id="menu-es6-collection" class="menu"><li id="menu-item-751" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-751"><a title="JavaScript Set" href="https://www.javascripttutorial.net/es6/javascript-set/">Set</a></li><li id="menu-item-752" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-752"><a title="Essential Guide to JavaScript Map" href="https://www.javascripttutorial.net/es6/javascript-map/">Map</a></li></ul></div></div></section><section id="nav_menu-18" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Array Extensions</h4><div class="menu-es6-array-extensions-container"><ul id="menu-es6-array-extensions" class="menu"><li id="menu-item-84855" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84855"><a title="JavaScript Array.of() Method" href="https://www.javascripttutorial.net/es6/javascript-array-of/">Array.of()</a></li><li id="menu-item-84854" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84854"><a title="JavaScript Array from() method" href="https://www.javascripttutorial.net/es6/javascript-array-from/">Array.from()</a></li><li id="menu-item-84875" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84875"><a title="JavaScript Array find() Method" href="https://www.javascripttutorial.net/es6/javascript-array-find/">Array find()</a></li><li id="menu-item-84874" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84874"><a title="Array findIndex()" href="https://www.javascripttutorial.net/es6/javascript-array-findindex/">Array findIndex()</a></li></ul></div></div></section><section id="nav_menu-20" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Object Extensions</h4><div class="menu-es6-object-extensions-container"><ul id="menu-es6-object-extensions" class="menu"><li id="menu-item-84937" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84937"><a title="JavaScript Object.assign()" href="https://www.javascripttutorial.net/es6/javascript-object-assign/">Object.assign()</a></li><li id="menu-item-84936" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84936"><a title="JavaScript Object.is()" href="https://www.javascripttutorial.net/es6/javascript-object-is/">Object.is()</a></li></ul></div></div></section><section id="nav_menu-21" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">String Extensions</h4><div class="menu-es6-string-extensions-container"><ul id="menu-es6-string-extensions" class="menu"><li id="menu-item-84949" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84949"><a title="JavaScript String startsWith" href="https://www.javascripttutorial.net/es6/javascript-string-startswith/">String startsWith()</a></li><li id="menu-item-84948" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84948"><a title="JavaScript String endsWith" href="https://www.javascripttutorial.net/es6/javascript-string-endswith/">String endsWith()</a></li><li id="menu-item-84953" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84953"><a title="JavaScript String includes()" href="https://www.javascripttutorial.net/es6/javascript-string-includes/">String includes()</a></li></ul></div></div></section><section id="nav_menu-19" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Proxy &#038; Reflection</h4><div class="menu-es6-proxy-reflection-container"><ul id="menu-es6-proxy-reflection" class="menu"><li id="menu-item-84857" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84857"><a title="JavaScript Proxy" href="https://www.javascripttutorial.net/es6/javascript-proxy/">Proxy</a></li><li id="menu-item-84856" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84856"><a title="JavaScript Reflection" href="https://www.javascripttutorial.net/es6/javascript-reflection/">Reflection</a></li></ul></div></div></section><section id="textblockswidget-4" class="widget widget_textblockswidget"><div class="widget-wrap"><div class="text-block sidebar-bottom"><div class="ad"><div data-type="ad" data-publisher="javascripttutorial.net" data-format="300x250" data-zone="sidebar_bottom"></div></div></div></div></section></aside></div></div></div><div class="footer-widgets"><div class="wrap"><div class="widget-area footer-widgets-1 footer-widget-area"><section id="text-2" class="widget widget_text"><div class="widget-wrap"><h4 class="widget-title widgettitle">About JavaScript Tutorial</h4><div class="textwidget">The JavaScript Tutorial website helps you learn JavaScript programming from scratch quickly and effectively.</div></div></section></div><div class="widget-area footer-widgets-2 footer-widget-area"><section id="recently_created_pages-2" class="widget Recently_Created_Pages"><div class="widget-wrap"><h4 class="widget-title widgettitle">Recent Tutorials</h4><ul><li class='page_item page-item-87351'><a href='https://www.javascripttutorial.net/nodejs-tutorial/npm-publish/' title='Npm Publish'>Npm Publish</a></li><li class='page_item page-item-87344'><a href='https://www.javascripttutorial.net/nodejs-tutorial/npm-uninstall/' title='Npm Uninstall'>Npm Uninstall</a></li><li class='page_item page-item-87340'><a href='https://www.javascripttutorial.net/nodejs-tutorial/npm-view/' title='Npm View'>Npm View</a></li><li class='page_item page-item-87329'><a href='https://www.javascripttutorial.net/nodejs-tutorial/npm-list/' title='Npm List'>Npm List</a></li><li class='page_item page-item-87319'><a href='https://www.javascripttutorial.net/nodejs-tutorial/npm-semantic-versioning/' title='Npm Semantic Versioning'>Npm Semantic Versioning</a></li></ul></div></section></div><div class="widget-area footer-widgets-3 footer-widget-area"><section id="nav_menu-2" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Site Links</h4><div class="menu-footer-container"><ul id="menu-footer" class="menu"><li id="menu-item-30" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-30"><a title="Want to know more about us?" href="https://www.javascripttutorial.net/about/">About Us</a></li><li id="menu-item-29" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-29"><a title="Do you have any suggestions or feedback? Just contact us" href="https://www.javascripttutorial.net/contact/">Contact Us</a></li><li id="menu-item-28" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-28"><a title="Privacy Policy" href="https://www.javascripttutorial.net/privacy-policy/">Privacy Policy</a></li></ul></div></div></section></div></div></div><footer class="site-footer"><div class="wrap"><div class="creds"><p>Copyright &#x000A9;&nbsp;2020 by JavaScript Tutorial Website. All Right Reserved.</div></div></footer></div><script type='text/javascript'>function _dmBootstrap(file) {
    var _dma = document.createElement('script');
    _dma.type = 'text/javascript';
    _dma.async = true;
    _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
}
function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js'); }
(function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000); })();</script><noscript><style>.lazyload{display:none;}</style></noscript><script data-noptimize="1">window.lazySizesConfig=window.lazySizesConfig||{};window.lazySizesConfig.loadMode=1;</script><script async data-noptimize="1" src='https://cdn.javascripttutorial.net//wp-content/plugins/autoptimize/classes/external/js/lazysizes.min.js?ao_version=2.7.3'></script> <script type='text/javascript'>var wth_js_lang = {"ajax_url":"https:\/\/www.javascripttutorial.net\/wp-admin\/admin-ajax.php","nonce":"b0846a824b","confirm":"Are you sure to delete item?","positive_feedback":null,"positive_feedback_option":"feedback_messege","positive_feedback_required":null,"negative_feedback":"true","negative_feedback_required":"true","wth_title_nothank":"What was wrong? Please help us to improve","wth_title_yesthank":"Well Done! Please leave your positive feedback.","wth_thank_you":"Thank You for your feedback!","submit_text":"Submit","wth_ga_enable":"","wth_ga_category":"Was This Helpful?","wth_ga_positive":"Positive Reviews","wth_ga_negative":"Negative Reviews","wth_share_ask":"Awesome, share it:","wth_fb_share":"Share","wth_twitter_share":"Tweet"};</script> <script defer src="https://cdn.javascripttutorial.net/wp-content/cache/autoptimize/js/autoptimize_8e629f2ae4d14517d0dd9cc7feb43e91.js"></script></body></html>