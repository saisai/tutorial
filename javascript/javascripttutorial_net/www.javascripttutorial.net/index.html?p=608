<!DOCTYPE html><html lang="en-US"><head ><meta charset="UTF-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link media="all" href="https://cdn.javascripttutorial.net/wp-content/cache/autoptimize/css/autoptimize_b9593cf7eb00215d514848ce6cc25544.css" rel="stylesheet" /><title>JavaScript Class Fundamentals: Introduction to ES6 Class</title><meta name="description" content="In this tutorial, you will learn about the JavaScript class and how to create classes in ES6." /><meta name="robots" content="index, follow" /><meta name="googlebot" content="index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1" /><meta name="bingbot" content="index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1" /><link rel="canonical" href="https://www.javascripttutorial.net/es6/javascript-class/" /><meta property="og:locale" content="en_US" /><meta property="og:type" content="article" /><meta property="og:title" content="JavaScript Class Fundamentals: Introduction to ES6 Class" /><meta property="og:description" content="In this tutorial, you will learn about the JavaScript class and how to create classes in ES6." /><meta property="og:url" content="https://www.javascripttutorial.net/es6/javascript-class/" /><meta property="og:site_name" content="JavaScript Tutorial" /><meta property="article:modified_time" content="2020-01-30T08:03:58+00:00" /><meta name="twitter:card" content="summary" /> <script type="application/ld+json" class="yoast-schema-graph">{"@context":"https://schema.org","@graph":[{"@type":"WebSite","@id":"https://www.javascripttutorial.net/#website","url":"https://www.javascripttutorial.net/","name":"JavaScript Tutorial","description":"A comprehensive JavaScript Tutorial","potentialAction":[{"@type":"SearchAction","target":"https://www.javascripttutorial.net/?s={search_term_string}","query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"WebPage","@id":"https://www.javascripttutorial.net/es6/javascript-class/#webpage","url":"https://www.javascripttutorial.net/es6/javascript-class/","name":"JavaScript Class Fundamentals: Introduction to ES6 Class","isPartOf":{"@id":"https://www.javascripttutorial.net/#website"},"datePublished":"2016-09-11T03:56:02+00:00","dateModified":"2020-01-30T08:03:58+00:00","description":"In this tutorial, you will learn about the JavaScript class and how to create classes in ES6.","inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https://www.javascripttutorial.net/es6/javascript-class/"]}]}]}</script> <link rel='dns-prefetch' href='//ajax.googleapis.com' /><link rel='dns-prefetch' href='//fonts.googleapis.com' /><link rel="alternate" type="application/rss+xml" title="JavaScript Tutorial &raquo; Feed" href="https://www.javascripttutorial.net/feed/" /><link rel="alternate" type="application/rss+xml" title="JavaScript Tutorial &raquo; Comments Feed" href="https://www.javascripttutorial.net/comments/feed/" /><link rel='stylesheet' id='coded-google-font-css'  href='https://fonts.googleapis.com/css2?family=PT+Serif%3Awght%40400%3B700&#038;display=swap&#038;ver=5.4.2' type='text/css' media='all' /><link rel='stylesheet' id='coded-code-font-css-css'  href='https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400&#038;display=swap' type='text/css' media='all' /> <script type='text/javascript' defer src='https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js'></script> <link rel='https://api.w.org/' href='https://www.javascripttutorial.net/wp-json/' /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.javascripttutorial.net/xmlrpc.php?rsd" /><link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://cdn.javascripttutorial.net/wp-includes/wlwmanifest.xml" /><meta name="generator" content="WordPress 5.4.2" /><link rel='shortlink' href='https://www.javascripttutorial.net/?p=608' /><link rel="alternate" type="application/json+oembed" href="https://www.javascripttutorial.net/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.javascripttutorial.net%2Fes6%2Fjavascript-class%2F" /><link rel="alternate" type="text/xml+oembed" href="https://www.javascripttutorial.net/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.javascripttutorial.net%2Fes6%2Fjavascript-class%2F&#038;format=xml" /><link rel="pingback" href="https://www.javascripttutorial.net/xmlrpc.php" /> <script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-64856799-4', 'auto');
  ga('send', 'pageview');</script><style type="text/css">.site-header .title-area { background: url(https://cdn.javascripttutorial.net/wp-content/uploads/2020/03/logo.png) no-repeat !important; }</style><link rel="icon" href="https://cdn.javascripttutorial.net/wp-content/uploads/2020/02/favicon-150x150.png" sizes="32x32" /><link rel="icon" href="https://cdn.javascripttutorial.net/wp-content/uploads/2020/02/favicon-300x300.png" sizes="192x192" /><link rel="apple-touch-icon" href="https://cdn.javascripttutorial.net/wp-content/uploads/2020/02/favicon-300x300.png" /><meta name="msapplication-TileImage" content="https://cdn.javascripttutorial.net/wp-content/uploads/2020/02/favicon-300x300.png" /><style type="text/css" id="wp-custom-css">iframe {
    border: none;
    min-height: 50px;
    width: 100%;
}

.category-17 .entry {
    display: none;
}</style></head><body class="page-template-default page page-id-608 page-child parent-pageid-382 custom-header header-image header-full-width content-sidebar genesis-breadcrumbs-visible genesis-footer-widgets-visible eleven40-pro-blue"><a href="javascript:void(0)" class="to-top" title="Back To Top"><i class="icon-angle-up"></i></a><div class="site-container"><header class="site-header"><div class="wrap"><div class="title-area"><p class="site-title"><a href="https://www.javascripttutorial.net/">JavaScript Tutorial</a></p></div><nav class="nav-primary" aria-label="Main"><div class="wrap"><ul id="menu-top-menu" class="menu genesis-nav-menu menu-primary"><li id="menu-item-48" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home menu-item-48"><a title="JavaScript Tutorial" href="https://www.javascripttutorial.net/"><span >Home</span></a></li><li id="menu-item-386" class="menu-item menu-item-type-post_type menu-item-object-page current-page-ancestor menu-item-386"><a title="ES6 Tutorial" href="https://www.javascripttutorial.net/es6/"><span >ES6</span></a></li><li id="menu-item-979" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-979"><a title="Latest JavaScript Features" href="https://www.javascripttutorial.net/es-next/"><span >ES.Next</span></a></li><li id="menu-item-85213" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85213"><a title="JavaScript BOM" href="https://www.javascripttutorial.net/javascript-bom/"><span >JS BOM</span></a></li><li id="menu-item-85214" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85214"><a title="JavaScript DOM" href="https://www.javascripttutorial.net/javascript-dom/"><span >JS DOM</span></a></li><li id="menu-item-86319" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-86319"><a title="JavaScript Snippets" href="https://www.javascripttutorial.net/snippets/"><span >Snippets</span></a></li></ul></div></nav></div></header><div class="site-inner"><div class="wrap"><div class="content-sidebar-wrap"><main class="content"><div class="breadcrumb"><span class="breadcrumb-link-wrap"><a class="breadcrumb-link" href="https://www.javascripttutorial.net/"><span class="breadcrumb-link-text-wrap">Home</span></a><meta ></span> / <span class="breadcrumb-link-wrap"><a class="breadcrumb-link" href="https://www.javascripttutorial.net/es6/"><span class="breadcrumb-link-text-wrap">ES6 Tutorial</span></a><meta ></span> / JavaScript Class Fundamentals</div><article class="post-608 page type-page status-publish entry"><header class="entry-header"><h1 class="entry-title">JavaScript Class Fundamentals</h1><div class="ad"><div data-type="ad" data-publisher="javascripttutorial.net" data-format="300x250" data-zone="content_top"></div></div></header><div class="entry-content"><p><strong>Summary</strong>: in this tutorial, you will learn about the JavaScript class and how to create classes in ES6.</p><h2>Classes prior to ES6 revisited</h2><p>Prior to ES6, JavaScript had no classes. To mimic a class, we often use a constructor function as shown in the following example:</p><pre class="wp-block-code"><code class="hljs language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Animal</span>(<span class="hljs-params">type</span>) </span>{
    <span class="hljs-keyword">this</span>.type = type;
}

Animal.prototype.identify = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{
    <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.type);
}

<span class="hljs-keyword">var</span> cat = <span class="hljs-keyword">new</span> Animal(<span class="hljs-string">'Cat'</span>);
cat.identify(); <span class="hljs-comment">// Cat</span></code></pre><p>How it works.</p><ul><li>First, created the <code>Animal</code> as a constructor function that has a property name called <code>type</code>. The <code>identify()</code> method is assigned to the <code>prototype</code> so that it can be shared by all instances of the <code>Animal</code> type.</li><li>Then, created a new instance of the <code>Animal</code>&nbsp;type using the <code>new</code> operator. The <code>cat</code> object, hence, is an instance of the <code>Animal</code> and of <code>Object</code> through&nbsp;<a href="http://www.javascripttutorial.net/es6/javascript-inheritance/">prototypal inheritance</a>.</li></ul><h2>JavaScript class declaration</h2><p>ES6 introduced a new syntax for creating&nbsp;a&nbsp;class as shown in this&nbsp;example.</p><pre class="wp-block-code"><code class="hljs language-javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Animal</span> </span>{
    <span class="hljs-keyword">constructor</span>(type) {
        <span class="hljs-keyword">this</span>.type = type;
    }
    identify() {
        <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.type);
    }
}

<span class="hljs-keyword">let</span> cat = <span class="hljs-keyword">new</span> Animal(<span class="hljs-string">'Cat'</span>);
cat.identify();
</code></pre><p>This <code>Animal</code> class behaves like the <code>Animal</code> type in the previous example. However, instead of using a constructor function, it uses the <code>class</code> keyword.</p><p>In the <code>Animal</code> class, the <code>constructor()</code> is where you can add the properties of an instance. The <code>identify()</code> is the method of the <code>Animal</code> class. Note that you don&#8217;t need to use the <code>function</code> keyword to declare a&nbsp;method of the class.</p><p>The class declaration is just <strong>syntactic sugar</strong> of the constructor function, therefore, the result of the&nbsp;&nbsp;<code>typeof</code> operator&nbsp;of the <code>Animal</code> class is &nbsp;<code>function</code>.</p><pre class="wp-block-code"><code class="hljs language-javascript"><span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">typeof</span> Animal); <span class="hljs-comment">// function</span></code></pre><p>In addition, the relationship between the <code>identify()</code> method and <code>Animal</code> class is the same as the relationship between the <code>identify()</code> method and the <code>Animal.prototype</code> in the previous example.</p><p class="note">Syntactic sugar is syntax in JavaScript programming language designed to make things easier to express more clearly and concisely.</p><h2>Class vs.&nbsp;custom type</h2><p>Despite the similarities between a class a custom type defined via a constructor function, there are some important differences.</p><p>First, class declarations are not hoisted like function declarations. For example, if you place the following code above the <code>Animal</code> class declaration section, you will get a <code>ReferenceError</code>.</p><pre class="wp-block-code"><code class="hljs language-javascript"><span class="hljs-keyword">let</span> dog = <span class="hljs-keyword">new</span> Animal(<span class="hljs-string">'Dog'</span>);
<span class="hljs-comment">// Uncaught ReferenceError: Animal is not defined</span></code></pre><p>Second, all the code inside a class automatically executes in the <em>strict mode</em>, and you cannot change this behavior.</p><p>Third, class methods are non-enumerable. If you use a constructor function, you have to use the <code>Object.defineProperty()</code> method to&nbsp;make a property non-enumerable.</p><p>Fourth, calling the class constructor without the <code>new</code> operator will result in an error as shown in the following example.</p><pre class="wp-block-code"><code class="hljs language-javascript"><span class="hljs-keyword">let</span> duck = Animal(<span class="hljs-string">'Duck'</span>);
<span class="hljs-comment">// Uncaught TypeError: Class constructor Animal cannot be invoked without 'new'</span></code></pre><h2>JavaScript class expressions</h2><p>Similar to <a href="http://www.javascripttutorial.net/javascript-function-type/">functions</a>, classes have expression forms too. A class expression does not require an <a href="http://www.javascripttutorial.net/javascript-syntax/#identifier">identifier</a> after the <code>class</code> keyword. You can use a class expression in a variable declaration and pass it into a function as an argument.</p><p>Here is a class expression that is equivalent to the previous <code>Animal</code> class example:</p><pre class="wp-block-code"><code class="hljs language-javascript"><span class="hljs-keyword">let</span> Animal = <span class="hljs-class"><span class="hljs-keyword">class</span> </span>{
    <span class="hljs-keyword">constructor</span>(type) {
        <span class="hljs-keyword">this</span>.type = type;
    }
    identify() {
        <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.type);
    }
}

<span class="hljs-keyword">let</span> duck = <span class="hljs-keyword">new</span> Animal(<span class="hljs-string">'Duck'</span>);

<span class="hljs-built_in">console</span>.log(duck <span class="hljs-keyword">instanceof</span> Animal); <span class="hljs-comment">// true</span>
<span class="hljs-built_in">console</span>.log(duck <span class="hljs-keyword">instanceof</span> <span class="hljs-built_in">Object</span>); <span class="hljs-comment">// true</span>

<span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">typeof</span> Animal); <span class="hljs-comment">// function</span>
<span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">typeof</span> Animal.prototype); <span class="hljs-comment">// function</span>
</code></pre><p>Similar to function expressions, class expressions are not hoisted.</p><h3>First-class citizen</h3><p>JavaScript class is a first-class citizen. It means that you can pass a&nbsp;class into a function, return it from a function, and assign it to a variable.</p><p>See the following example:</p><pre class="wp-block-code"><code class="hljs language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">factory</span>(<span class="hljs-params">aClass</span>) </span>{
    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> aClass();
}

<span class="hljs-keyword">let</span> greeting = factory(<span class="hljs-class"><span class="hljs-keyword">class</span> </span>{
    sayHi() {
        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'Hi'</span>);
    }
});

greeting.sayHi(); <span class="hljs-comment">// 'Hi'</span>
</code></pre><p>In this example, the <code>factory()</code> function takes an anonymous class expression as an argument. It creates an instance of that class and returns the instance.</p><h3>Singleton</h3><p>You can use the class expression to create singleton by calling the class constructor immediately. To do this, you use the <code>new</code> operator with a class expression and include the parentheses at the end of class declaration as in the following example.</p><pre class="wp-block-code"><code class="hljs language-javascript"><span class="hljs-keyword">let</span> app = <span class="hljs-keyword">new</span> <span class="hljs-class"><span class="hljs-keyword">class</span> </span>{
    <span class="hljs-keyword">constructor</span>(name) {
        <span class="hljs-keyword">this</span>.name = name;
    }
    start() {
        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`Starting the <span class="hljs-subst">${<span class="hljs-keyword">this</span>.name}</span>...`</span>);
    }

}(<span class="hljs-string">'Awesome App'</span>);

app.start(); <span class="hljs-comment">// Starting the Awesome App...</span></code></pre><p>In this example, we create an anonymous class expression and execute it immediately.</p><h2>Getter and setter</h2><p>To create a getter and setter, you use <code>get</code> and <code>set</code> keywords followed by a space and an identifier. See the following example:</p><pre class="wp-block-code"><code class="hljs language-javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> </span>{
    <span class="hljs-keyword">constructor</span>(firstName, lastName) {
        <span class="hljs-keyword">this</span>.firstName = firstName;
        <span class="hljs-keyword">this</span>.lastName = lastName;
    }
    <span class="hljs-keyword">get</span> fullName() {
        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.firstName + <span class="hljs-string">' '</span> + <span class="hljs-keyword">this</span>.lastName;
    }

    <span class="hljs-keyword">set</span> fullName(str) {
        <span class="hljs-keyword">let</span> names = str.split(<span class="hljs-string">' '</span>);
        <span class="hljs-keyword">if</span> (names.length === <span class="hljs-number">2</span>) {
            <span class="hljs-keyword">this</span>.firstName = names[<span class="hljs-number">0</span>];
            <span class="hljs-keyword">this</span>.lastName = names[<span class="hljs-number">1</span>];
        } <span class="hljs-keyword">else</span> {
            <span class="hljs-keyword">throw</span> <span class="hljs-string">'Invalid name format'</span>;
        }
    }
}

<span class="hljs-keyword">let</span> mary = <span class="hljs-keyword">new</span> Person(<span class="hljs-string">'Mary'</span>, <span class="hljs-string">'Doe'</span>);
<span class="hljs-built_in">console</span>.log(mary.fullName); <span class="hljs-comment">// Mary Doe</span>

<span class="hljs-comment">// set new name</span>
mary.fullName = <span class="hljs-string">'Mary William'</span>;
<span class="hljs-built_in">console</span>.log(mary.fullName); <span class="hljs-comment">// Mary William</span>
</code></pre><p>The <code>Person</code> class has the property <code>fullName</code> as a getter and setter.</p><p>The <code>fullName</code> getter returns the full name of a person object by concatenating the first name, space, and last name.</p><p>The <code>fullName</code> setter accepts a string as an argument. The setter method splits the string into parts and assigns the <code>firstName</code> and <code>lastName</code> properties the appropriate&nbsp;parts. If the input argument is not in the correct format i.e., first name, space, and last name, the setter method throws an error.</p><h2>Computed member names</h2><p>Like an <a href="http://www.javascripttutorial.net/es6/object-literal-extensions/">object literal</a>, you can use computed names for properties of a class. The following <code>Person</code> class is equivalent to the <code>Person</code> class in the previous example except that it uses the name as the computed getter and setter.</p><pre class="wp-block-code"><code class="hljs language-javascript"><span class="hljs-keyword">let</span> name = <span class="hljs-string">'fullName'</span>;
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> </span>{
    <span class="hljs-keyword">constructor</span>(firstName, lastName) {
        <span class="hljs-keyword">this</span>.firstName = firstName;
        <span class="hljs-keyword">this</span>.lastName = lastName;
    }
    <span class="hljs-keyword">get</span>[name]() {
        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.firstName + <span class="hljs-string">' '</span> + <span class="hljs-keyword">this</span>.lastName;
    }
    <span class="hljs-keyword">set</span>[name](str) {
        <span class="hljs-comment">//...</span>
    }
}

<span class="hljs-keyword">var</span> john = <span class="hljs-keyword">new</span> Person(<span class="hljs-string">'John'</span>, <span class="hljs-string">'Doe'</span>);
<span class="hljs-built_in">console</span>.log(john.fullName); <span class="hljs-comment">// John Doe</span></code></pre><h2>Static&nbsp;methods</h2><p>Prior to ES6, to create a static method, you add the method directly to the constructor. For example, the following adds a static method to the <code>Animal</code> type:</p><pre class="wp-block-code"><code class="hljs language-javascript">Animal.make = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">type</span>) </span>{
    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Animal(type);
}

<span class="hljs-keyword">var</span> dog = Animal.make(<span class="hljs-string">'Dog'</span>);
dog.identify(); <span class="hljs-comment">// Dog</span></code></pre><p>The <code>make()</code> method is considered a static method because it doesn&#8217;t depend&nbsp;on any instance of the <code>Animal</code> for its property values. ES6 simplified this by using the <code>static</code> notation before the method name as shown in the following example:</p><pre class="wp-block-code"><code class="hljs language-javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Animal</span> </span>{
    <span class="hljs-keyword">constructor</span>(type) {
        <span class="hljs-keyword">this</span>.type = type;
    }
    identify() {
        <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.type);
    }
    <span class="hljs-keyword">static</span> create(type) {
        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Animal(type);
    }
}

<span class="hljs-keyword">var</span> mouse = Animal.create(<span class="hljs-string">'Mouse'</span>);
mouse.identify(); <span class="hljs-comment">// mouse</span></code></pre><p>Note that an attempt to access the static method from an instance of the class results in an error.</p><pre class="wp-block-code"><code class="hljs language-javascript">mouse.create(<span class="hljs-string">'Monkey'</span>); 
<span class="hljs-comment">// Uncaught TypeError: mouse.create is not a function</span>
</code></pre><p>ES6 has not provided a way to define static properties like static methods&nbsp;even though there was a proposal for adding them to the language.</p><p>Now, you should have a good understanding of JavaScript class in ES6 and how to apply it to develop custom types in your application.</p><div class="helpful-block-content wth-theme-thumbs" data-title="" ><ul><li><span class="wth-title">Was this tutorial helpful ?</span></li><li><a data-post="608" data-post-url="https://www.javascripttutorial.net/es6/javascript-class/" data-post-title="JavaScript Class Fundamentals" data-response="1" href="#" class="wth-green-btn icon-thumbsup icon1-thumbs-up4">Yes</a><a data-response="0" data-post="608" data-post-url="https://www.javascripttutorial.net/es6/javascript-class/" data-post-title="JavaScript Class Fundamentals" href="#" class="wth-red-btn icon-thumbsdown icon1-thumbs-down4">No</a></li></ul></div></div><div class="ad"><div data-type="ad" data-publisher="javascripttutorial.net" data-format="300x250" data-zone="content_bottom"></div></div><div class="page-navigation"><div class="page-previous"><a class="prev-page-anchor" href="https://www.javascripttutorial.net/es6/es6-modules/" rel="prev" title="A Comprehensive Look at ES6 Modules"><span>Previous</span> A Comprehensive Look at ES6 Modules</a></div><div class="page-next"><a class="next-page-anchor" href="https://www.javascripttutorial.net/es6/javascript-inheritance/" rel="next" title="JavaScript Inheritance Using extends &#038; super"><span>Next</span> JavaScript Inheritance Using extends &#038; super</a></div></div></article></main><aside class="sidebar sidebar-primary widget-area" role="complementary" aria-label="Primary Sidebar"><section id="search-4" class="widget widget_search"><div class="widget-wrap"><form class="search-form" method="get" action="https://www.javascripttutorial.net/" role="search"><input class="search-form-input" type="search" name="s" id="searchform-1" placeholder="Search this website"><input class="search-form-submit" type="submit" value="Search"><meta content="https://www.javascripttutorial.net/?s={s}"></form></div></section><section id="textblockswidget-2" class="widget widget_textblockswidget"><div class="widget-wrap"><div class="text-block sidebar-top"><div class="ad"><div data-type="ad" data-publisher="javascripttutorial.net" data-format="300x250" data-zone="sidebar_top"></div></div><div id="carbon-block"></div> <script>try {
  fetch(new Request("https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js", { method: 'HEAD', mode: 'no-cors' })).then(function(response) {
    return true;
  }).catch(function(e) {
    var carbonScript = document.createElement("script");
    carbonScript.src = "//cdn.carbonads.com/carbon.js?serve=CE7IC2QE&placement=wwwjavascripttutorialnet";
    carbonScript.id = "_carbonads_js";
    document.getElementById("carbon-block").appendChild(carbonScript);
  });
} catch (error) {
  console.log(error);
}</script></div></div></section><section id="nav_menu-10" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">New ES6 Syntax</h4><div class="menu-es6-new-syntax-container"><ul id="menu-es6-new-syntax" class="menu"><li id="menu-item-769" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-769"><a title="JavaScript let" href="https://www.javascripttutorial.net/es6/javascript-let/">JavaScript let</a></li><li id="menu-item-84751" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84751"><a title="Differences Between var and let" href="https://www.javascripttutorial.net/es6/difference-between-var-and-let/">var vs. let</a></li><li id="menu-item-770" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-770"><a title="JavaScript const" href="https://www.javascripttutorial.net/es6/javascript-const/">JavaScript const</a></li><li id="menu-item-771" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-771"><a title="JavaScript Template Literals" href="https://www.javascripttutorial.net/es6/javascript-template-literals/">Template Literals</a></li><li id="menu-item-772" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-772"><a title="Object Literal Syntax Extensions" href="https://www.javascripttutorial.net/es6/object-literal-extensions/">Object Literal Syntax Extensions</a></li><li id="menu-item-773" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-773"><a title="JavaScript Default Parameters" href="https://www.javascripttutorial.net/es6/javascript-default-parameters/">Default Parameters</a></li><li id="menu-item-774" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-774"><a title="JavaScript Rest Parameters" href="https://www.javascripttutorial.net/es6/javascript-rest-parameters/">Rest Parameters</a></li><li id="menu-item-775" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-775"><a title="JavaScript Spread Operator" href="https://www.javascripttutorial.net/es6/javascript-spread/">Spread Operator</a></li><li id="menu-item-776" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-776"><a title="JavaScript Destructuring" href="https://www.javascripttutorial.net/es6/destructuring/">Destructuring</a></li><li id="menu-item-777" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-777"><a title="JavaScript for…of Loop" href="https://www.javascripttutorial.net/es6/javascript-for-of/">for…of Loop</a></li><li id="menu-item-84759" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84759"><a title="A Quick Look at Octal and Binary Literals in ES6" href="https://www.javascripttutorial.net/es6/octal-and-binary-literals/">Octal and Binary Literals</a></li></ul></div></div></section><section id="nav_menu-11" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">ES6 Module &#038; Class</h4><div class="menu-es6-module-class-container"><ul id="menu-es6-module-class" class="menu"><li id="menu-item-84749" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84749"><a title="A Comprehensive Look at ES6 Modules" href="https://www.javascripttutorial.net/es6/es6-modules/">Modules</a></li><li id="menu-item-778" class="menu-item menu-item-type-post_type menu-item-object-page current-menu-item page_item page-item-608 current_page_item menu-item-778"><a title="JavaScript Class Fundamentals" href="https://www.javascripttutorial.net/es6/javascript-class/" aria-current="page">Class Fundamentals</a></li><li id="menu-item-779" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-779"><a title="JavaScript Inheritance" href="https://www.javascripttutorial.net/es6/javascript-inheritance/">Inheritance</a></li><li id="menu-item-780" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-780"><a title="JavaScript new.target Metaproperty" href="https://www.javascripttutorial.net/es6/javascript-new-target/">new.target</a></li></ul></div></div></section><section id="textblockswidget-3" class="widget widget_textblockswidget"><div class="widget-wrap"><div class="text-block sidebar-middle"><div class="ad"><div data-type="ad" data-publisher="javascripttutorial.net" data-format="300x250" data-zone="sidebar_middle"></div></div></div></div></section><section id="nav_menu-22" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">ES6 Arrow Functions</h4><div class="menu-es6-arrow-functions-container"><ul id="menu-es6-arrow-functions" class="menu"><li id="menu-item-86536" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-86536"><a title="An Introduction to JavaScript Arrow Functions" href="https://www.javascripttutorial.net/es6/javascript-arrow-function/">Arrow Functions</a></li><li id="menu-item-86535" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-86535"><a title="When you should not use the arrow functions" href="https://www.javascripttutorial.net/es6/when-you-should-not-use-arrow-functions/">When Not To Use Arrow Functions</a></li></ul></div></div></section><section id="nav_menu-16" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Iterators &#038; Generators</h4><div class="menu-es6-iterators-generators-container"><ul id="menu-es6-iterators-generators" class="menu"><li id="menu-item-84777" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84777"><a title="JavaScript Iterators" href="https://www.javascripttutorial.net/es6/javascript-iterator/">Iterators</a></li><li id="menu-item-84776" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84776"><a title="JavaScript Generators" href="https://www.javascripttutorial.net/es6/javascript-generators/">Generators</a></li><li id="menu-item-84824" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84824"><a title="JavaScript yield Keyword" href="https://www.javascripttutorial.net/es6/javascript-yield/">yield Keyword</a></li></ul></div></div></section><section id="nav_menu-17" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Promises</h4><div class="menu-es6-promises-container"><ul id="menu-es6-promises" class="menu"><li id="menu-item-84778" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84778"><a title="JavaScript Promises" href="https://www.javascripttutorial.net/es6/javascript-promises/">Promises</a></li><li id="menu-item-85916" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85916"><a title="Promise Chaining" href="https://www.javascripttutorial.net/es6/promise-chaining/">Promise Chaining</a></li><li id="menu-item-85939" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85939"><a title="JavaScript Promise.all()" href="https://www.javascripttutorial.net/es6/javascript-promise-all/">Promise.all()</a></li><li id="menu-item-85938" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85938"><a title="JavaScript Promise.race()" href="https://www.javascripttutorial.net/es6/javascript-promise-race/">Promise.race()</a></li><li id="menu-item-85915" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85915"><a title="Promise Error Handling" href="https://www.javascripttutorial.net/es6/promise-error-handling/">Promise Error Handling</a></li></ul></div></div></section><section id="nav_menu-12" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">ES6 Collections</h4><div class="menu-es6-collection-container"><ul id="menu-es6-collection" class="menu"><li id="menu-item-751" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-751"><a title="JavaScript Set" href="https://www.javascripttutorial.net/es6/javascript-set/">Set</a></li><li id="menu-item-752" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-752"><a title="Essential Guide to JavaScript Map" href="https://www.javascripttutorial.net/es6/javascript-map/">Map</a></li></ul></div></div></section><section id="nav_menu-18" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Array Extensions</h4><div class="menu-es6-array-extensions-container"><ul id="menu-es6-array-extensions" class="menu"><li id="menu-item-84855" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84855"><a title="JavaScript Array.of() Method" href="https://www.javascripttutorial.net/es6/javascript-array-of/">Array.of()</a></li><li id="menu-item-84854" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84854"><a title="JavaScript Array from() method" href="https://www.javascripttutorial.net/es6/javascript-array-from/">Array.from()</a></li><li id="menu-item-84875" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84875"><a title="JavaScript Array find() Method" href="https://www.javascripttutorial.net/es6/javascript-array-find/">Array find()</a></li><li id="menu-item-84874" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84874"><a title="Array findIndex()" href="https://www.javascripttutorial.net/es6/javascript-array-findindex/">Array findIndex()</a></li></ul></div></div></section><section id="nav_menu-20" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Object Extensions</h4><div class="menu-es6-object-extensions-container"><ul id="menu-es6-object-extensions" class="menu"><li id="menu-item-84937" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84937"><a title="JavaScript Object.assign()" href="https://www.javascripttutorial.net/es6/javascript-object-assign/">Object.assign()</a></li><li id="menu-item-84936" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84936"><a title="JavaScript Object.is()" href="https://www.javascripttutorial.net/es6/javascript-object-is/">Object.is()</a></li></ul></div></div></section><section id="nav_menu-21" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">String Extensions</h4><div class="menu-es6-string-extensions-container"><ul id="menu-es6-string-extensions" class="menu"><li id="menu-item-84949" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84949"><a title="JavaScript String startsWith" href="https://www.javascripttutorial.net/es6/javascript-string-startswith/">String startsWith()</a></li><li id="menu-item-84948" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84948"><a title="JavaScript String endsWith" href="https://www.javascripttutorial.net/es6/javascript-string-endswith/">String endsWith()</a></li><li id="menu-item-84953" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84953"><a title="JavaScript String includes()" href="https://www.javascripttutorial.net/es6/javascript-string-includes/">String includes()</a></li></ul></div></div></section><section id="nav_menu-19" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Proxy &#038; Reflection</h4><div class="menu-es6-proxy-reflection-container"><ul id="menu-es6-proxy-reflection" class="menu"><li id="menu-item-84857" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84857"><a title="JavaScript Proxy" href="https://www.javascripttutorial.net/es6/javascript-proxy/">Proxy</a></li><li id="menu-item-84856" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84856"><a title="JavaScript Reflection" href="https://www.javascripttutorial.net/es6/javascript-reflection/">Reflection</a></li></ul></div></div></section><section id="textblockswidget-4" class="widget widget_textblockswidget"><div class="widget-wrap"><div class="text-block sidebar-bottom"><div class="ad"><div data-type="ad" data-publisher="javascripttutorial.net" data-format="300x250" data-zone="sidebar_bottom"></div></div></div></div></section></aside></div></div></div><div class="footer-widgets"><div class="wrap"><div class="widget-area footer-widgets-1 footer-widget-area"><section id="text-2" class="widget widget_text"><div class="widget-wrap"><h4 class="widget-title widgettitle">About JavaScript Tutorial</h4><div class="textwidget">The JavaScript Tutorial website helps you learn JavaScript programming from scratch quickly and effectively.</div></div></section></div><div class="widget-area footer-widgets-2 footer-widget-area"><section id="recently_created_pages-2" class="widget Recently_Created_Pages"><div class="widget-wrap"><h4 class="widget-title widgettitle">Recent Tutorials</h4><ul><li class='page_item page-item-87190'><a href='https://www.javascripttutorial.net/javascript-dom/javascript-mutationobserver/' title='JavaScript MutationObserver'>JavaScript MutationObserver</a></li><li class='page_item page-item-87176'><a href='https://www.javascripttutorial.net/javascript-dom/javascript-custom-events/' title='JavaScript Custom Events'>JavaScript Custom Events</a></li><li class='page_item page-item-87169'><a href='https://www.javascripttutorial.net/javascript-dom/javascript-dispatchevent/' title='JavaScript dispatchEvent'>JavaScript dispatchEvent</a></li><li class='page_item page-item-87156'><a href='https://www.javascripttutorial.net/javascript-dom/javascript-getelementsbyclassname/' title='JavaScript getElementsByClassName'>JavaScript getElementsByClassName</a></li><li class='page_item page-item-87139'><a href='https://www.javascripttutorial.net/javascript-dom/javascript-input-event/' title='JavaScript input Event'>JavaScript input Event</a></li></ul></div></section></div><div class="widget-area footer-widgets-3 footer-widget-area"><section id="nav_menu-2" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Site Links</h4><div class="menu-footer-container"><ul id="menu-footer" class="menu"><li id="menu-item-30" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-30"><a title="Want to know more about us?" href="https://www.javascripttutorial.net/about/">About Us</a></li><li id="menu-item-29" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-29"><a title="Do you have any suggestions or feedback? Just contact us" href="https://www.javascripttutorial.net/contact/">Contact Us</a></li><li id="menu-item-28" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-28"><a title="Privacy Policy" href="https://www.javascripttutorial.net/privacy-policy/">Privacy Policy</a></li></ul></div></div></section></div></div></div><footer class="site-footer"><div class="wrap"><div class="creds"><p>Copyright &#x000A9;&nbsp;2020 by JavaScript Tutorial Website. All Right Reserved.</div></div></footer></div><script type='text/javascript'>function _dmBootstrap(file) {
    var _dma = document.createElement('script');
    _dma.type = 'text/javascript';
    _dma.async = true;
    _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
}
function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js'); }
(function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000); })();</script><style>.lazyload,.lazyloading{opacity:0;}.lazyloaded{opacity:1;transition:opacity 300ms;}</style><noscript><style>.lazyload{display:none;}</style></noscript><script data-noptimize="1">window.lazySizesConfig=window.lazySizesConfig||{};window.lazySizesConfig.loadMode=1;</script><script async data-noptimize="1" src='https://cdn.javascripttutorial.net//wp-content/plugins/autoptimize/classes/external/js/lazysizes.min.js?ao_version=2.7.2'></script> <script type='text/javascript'>var wpcf7 = {"apiSettings":{"root":"https:\/\/www.javascripttutorial.net\/wp-json\/contact-form-7\/v1","namespace":"contact-form-7\/v1"},"cached":"1"};</script> <script type='text/javascript'>var wth_js_lang = {"ajax_url":"https:\/\/www.javascripttutorial.net\/wp-admin\/admin-ajax.php","nonce":"6b2df50f4e","confirm":"Are you sure to delete item?","positive_feedback":null,"positive_feedback_option":"feedback_messege","positive_feedback_required":null,"negative_feedback":"true","negative_feedback_required":"true","wth_title_nothank":"What was wrong? Please help us to improve","wth_title_yesthank":"Well Done! Please leave your positive feedback.","wth_thank_you":"Thank You for your feedback!","submit_text":"Submit","wth_ga_enable":"","wth_ga_category":"Was This Helpful?","wth_ga_positive":"Positive Reviews","wth_ga_negative":"Negative Reviews","wth_share_ask":"Awesome, share it:","wth_fb_share":"Share","wth_twitter_share":"Tweet"};</script> <script defer src="https://cdn.javascripttutorial.net/wp-content/cache/autoptimize/js/autoptimize_6f524518f01d827919878a8acc60ec4e.js"></script></body></html>