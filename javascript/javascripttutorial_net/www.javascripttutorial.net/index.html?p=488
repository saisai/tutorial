<!DOCTYPE html><html lang="en-US"><head ><meta charset="UTF-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link media="all" href="https://cdn.javascripttutorial.net/wp-content/cache/autoptimize/css/autoptimize_4b6c23c49276886eaa08de07eb9dc8e2.css" rel="stylesheet" /><title>A Gentle Introduction to JavaScript Arrow Function</title><meta name="description" content="This tutorial shows you how to use JavaScript arrow function syntax in ES6 and provides you with some pitfalls of using arrow functions." /><meta name="robots" content="index, follow" /><meta name="googlebot" content="index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1" /><meta name="bingbot" content="index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1" /><link rel="canonical" href="https://www.javascripttutorial.net/es6/javascript-arrow-function/" /><meta property="og:locale" content="en_US" /><meta property="og:type" content="article" /><meta property="og:title" content="A Gentle Introduction to JavaScript Arrow Function" /><meta property="og:description" content="This tutorial shows you how to use JavaScript arrow function syntax in ES6 and provides you with some pitfalls of using arrow functions." /><meta property="og:url" content="https://www.javascripttutorial.net/es6/javascript-arrow-function/" /><meta property="og:site_name" content="JavaScript Tutorial" /><meta property="article:modified_time" content="2020-03-24T06:40:59+00:00" /><meta name="twitter:card" content="summary" /> <script type="application/ld+json" class="yoast-schema-graph">{"@context":"https://schema.org","@graph":[{"@type":"WebSite","@id":"https://www.javascripttutorial.net/#website","url":"https://www.javascripttutorial.net/","name":"JavaScript Tutorial","description":"A comprehensive JavaScript Tutorial","potentialAction":[{"@type":"SearchAction","target":"https://www.javascripttutorial.net/?s={search_term_string}","query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"WebPage","@id":"https://www.javascripttutorial.net/es6/javascript-arrow-function/#webpage","url":"https://www.javascripttutorial.net/es6/javascript-arrow-function/","name":"A Gentle Introduction to JavaScript Arrow Function","isPartOf":{"@id":"https://www.javascripttutorial.net/#website"},"datePublished":"2016-08-25T17:41:27+00:00","dateModified":"2020-03-24T06:40:59+00:00","description":"This tutorial shows you how to use JavaScript arrow function syntax in ES6 and provides you with some pitfalls of using arrow functions.","inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https://www.javascripttutorial.net/es6/javascript-arrow-function/"]}]}]}</script> <link rel='dns-prefetch' href='//ajax.googleapis.com' /><link rel="alternate" type="application/rss+xml" title="JavaScript Tutorial &raquo; Feed" href="https://www.javascripttutorial.net/feed/" /><link rel="alternate" type="application/rss+xml" title="JavaScript Tutorial &raquo; Comments Feed" href="https://www.javascripttutorial.net/comments/feed/" /> <script type='text/javascript' defer src='https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js'></script> <link rel='https://api.w.org/' href='https://www.javascripttutorial.net/wp-json/' /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.javascripttutorial.net/xmlrpc.php?rsd" /><link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://cdn.javascripttutorial.net/wp-includes/wlwmanifest.xml" /><meta name="generator" content="WordPress 5.4.2" /><link rel='shortlink' href='https://www.javascripttutorial.net/?p=488' /><link rel="alternate" type="application/json+oembed" href="https://www.javascripttutorial.net/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.javascripttutorial.net%2Fes6%2Fjavascript-arrow-function%2F" /><link rel="alternate" type="text/xml+oembed" href="https://www.javascripttutorial.net/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.javascripttutorial.net%2Fes6%2Fjavascript-arrow-function%2F&#038;format=xml" /><link rel="pingback" href="https://www.javascripttutorial.net/xmlrpc.php" /> <script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-64856799-4', 'auto');
  ga('send', 'pageview');</script> <link rel="icon" href="https://cdn.javascripttutorial.net/wp-content/uploads/2020/02/favicon-150x150.png" sizes="32x32" /><link rel="icon" href="https://cdn.javascripttutorial.net/wp-content/uploads/2020/02/favicon-300x300.png" sizes="192x192" /><link rel="apple-touch-icon" href="https://cdn.javascripttutorial.net/wp-content/uploads/2020/02/favicon-300x300.png" /><meta name="msapplication-TileImage" content="https://cdn.javascripttutorial.net/wp-content/uploads/2020/02/favicon-300x300.png" /></head><body class="page-template-default page page-id-488 page-child parent-pageid-382 custom-header header-image header-full-width content-sidebar genesis-breadcrumbs-visible genesis-footer-widgets-visible eleven40-pro-blue"><a href="javascript:void(0)" class="to-top" title="Back To Top"><i class="icon-angle-up"></i></a><div class="site-container"><header class="site-header"><div class="wrap"><div class="title-area"><p class="site-title"><a href="https://www.javascripttutorial.net/">JavaScript Tutorial</a></p></div><nav class="nav-primary" aria-label="Main"><div class="wrap"><ul id="menu-top-menu" class="menu genesis-nav-menu menu-primary"><li id="menu-item-48" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home menu-item-48"><a title="JavaScript Tutorial" href="https://www.javascripttutorial.net/"><span >Home</span></a></li><li id="menu-item-386" class="menu-item menu-item-type-post_type menu-item-object-page current-page-ancestor menu-item-386"><a title="ES6 Tutorial" href="https://www.javascripttutorial.net/es6/"><span >ES6</span></a></li><li id="menu-item-979" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-979"><a title="Latest JavaScript Features" href="https://www.javascripttutorial.net/es-next/"><span >ES.Next</span></a></li><li id="menu-item-85213" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85213"><a title="JavaScript BOM" href="https://www.javascripttutorial.net/javascript-bom/"><span >JS BOM</span></a></li><li id="menu-item-85214" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85214"><a title="JavaScript DOM" href="https://www.javascripttutorial.net/javascript-dom/"><span >JS DOM</span></a></li><li id="menu-item-86319" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-86319"><a title="JavaScript Snippets" href="https://www.javascripttutorial.net/snippets/"><span >Snippets</span></a></li></ul></div></nav></div></header><div class="site-inner"><div class="wrap"><div class="content-sidebar-wrap"><main class="content"><div class="breadcrumb"><span class="breadcrumb-link-wrap"><a class="breadcrumb-link" href="https://www.javascripttutorial.net/"><span class="breadcrumb-link-text-wrap">Home</span></a><meta ></span> / <span class="breadcrumb-link-wrap"><a class="breadcrumb-link" href="https://www.javascripttutorial.net/es6/"><span class="breadcrumb-link-text-wrap">ES6 Tutorial</span></a><meta ></span> / An Introduction to JavaScript Arrow Functions</div><article class="post-488 page type-page status-publish entry"><header class="entry-header"><h1 class="entry-title">An Introduction to JavaScript Arrow Functions</h1><div class="ad"><div data-type="ad" data-publisher="javascripttutorial.net" data-format="300x250" data-zone="content_top"></div></div></header><div class="entry-content"><p><strong>Summary</strong>: in this tutorial, you will learn how to use the JavaScript arrow function to write more concise code for function expressions.</p><h2>Introduction to JavaScript arrow functions</h2><p>ES6 arrow functions provide you with an alternative way to write a shorter syntax compared to the function expression.</p><p>The following example defines a function expression that adds two numbers:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> add = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x,y</span>) </span>{
  <span class="hljs-keyword">return</span> x + y;
}
<span class="hljs-built_in">console</span>.log(add(<span class="hljs-number">10</span>,<span class="hljs-number">20</span>)); <span class="hljs-comment">// 30</span></code></div></pre><p>The following example uses an arrow function which is equivalent to the above <code>add()</code> function expression:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> add = <span class="hljs-function">(<span class="hljs-params">x,y</span>) =&gt;</span> x + y;
<span class="hljs-built_in">console</span>.log(add(<span class="hljs-number">10</span>,<span class="hljs-number">20</span>)); <span class="hljs-comment">// 30;</span></code></div></pre><p>In this example, the arrow function has one expression <code>x + y</code> so it returns the result of the expression.</p><p>However, if you use the block syntax, you need to specify the <code>return</code> keyword:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> add = <span class="hljs-function">(<span class="hljs-params">x, y</span>) =&gt;</span> { <span class="hljs-keyword">return</span> x + y; };</code></div></pre><p>The &nbsp;<code>typeof</code> operator&nbsp;returns <code>function</code> indicating the type of arrow function.</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">typeof</span> add); <span class="hljs-comment">// function</span></code></div></pre><p>The arrow function is also an instance of the <a href="http://www.javascripttutorial.net/javascript-function-type/">Function type</a> as shown in the following example:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-built_in">console</span>.log(add <span class="hljs-keyword">instanceof</span> <span class="hljs-built_in">Function</span>); <span class="hljs-comment">// true</span></code></div></pre><h3>JavaScript arrow functions with multiple parameters</h3><p>If an arrow function has two or more parameters, you use the following syntax:</p><pre class="wp-block-code"><div><code class="hljs language-php">(p1, p2, ..., pn) =&gt; expression;</code></div></pre><p>The following expression:</p><pre class="wp-block-code"><div><code class="hljs language-php">=&gt; expression</code></div></pre><p>is equivalent to the following expression:</p><pre class="wp-block-code"><div><code class="hljs language-php">=&gt; { <span class="hljs-keyword">return</span> expression; }</code></div></pre><p>For example, to <a href="http://www.javascripttutorial.net/javascript-array-sort/">sort an array</a> of numbers in the descending order, you use the <code>sort()</code> method of the array object as follows:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> numbers = [<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">6</span>];
numbers.sort(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a,b</span>)</span>{ 
    <span class="hljs-keyword">return</span> b - a; 
});
<span class="hljs-built_in">console</span>.log(numbers); <span class="hljs-comment">// [6,4,2]</span></code></div></pre><p>The code is more concise with the arrow function syntax:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> numbers = [<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">6</span>];
numbers.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>) =&gt;</span> b - a);
<span class="hljs-built_in">console</span>.log(numbers); <span class="hljs-comment">// [6,4,2]</span></code></div></pre><h3>JavaScript arrow functions with a single parameter</h3><p>If an arrow function takes a single parameter, you use the following syntax:</p><pre class="wp-block-code"><div><code class="hljs language-php">(p1) =&gt; { statements }</code></div></pre><p>Note that you can omit the parentheses as follows:</p><pre class="wp-block-code"><div><code class="hljs language-php">p =&gt; { statements }</code></div></pre><p>The following example uses an arrow function as an argument of the <code><a href="https://www.javascripttutorial.net/javascript-array-map/">map()</a></code> method that transforms an array of strings into an array of the string&#8217;s lengths.</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> names = [<span class="hljs-string">'John'</span>, <span class="hljs-string">'Mac'</span>, <span class="hljs-string">'Peter'</span>];
<span class="hljs-keyword">let</span> lengths = names.map(<span class="hljs-function"><span class="hljs-params">name</span> =&gt;</span> name.length);

<span class="hljs-built_in">console</span>.log(lengths);</code></div></pre><h3>JavaScript arrow functions with no parameter</h3><p>If the arrow function has no parameter, you must use the parentheses, like this:</p><pre class="wp-block-code"><div><code class="hljs language-php">() =&gt; { statements }</code></div></pre><p>See the following example.</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> logDoc = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">window</span>.document);
logDoc();</code></div></pre><h2>Line break between parameter definition and arrow</h2><p>JavaScript doesn&#8217;t allow you to use a line break between the parameter definition and the arrow ( <code>=></code>) in an arrow function.</p><p>For example, the following code causes a <code>SyntaxError</code>:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> multiply = <span class="hljs-function">(<span class="hljs-params">x,y</span>) 
=&gt;</span> x * y; 
</code></div></pre><p>However, the following code works perfectly fine:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> multiply = <span class="hljs-function">(<span class="hljs-params">x,y</span>) =&gt;</span> 
x * y;</code></div></pre><p>JavaScript allows you to use the line break between parameters as shown in the following example:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> multiply = (
  x,
  y
) =&gt; 
x * y;</code></div></pre><h2>Statements &amp; expressions in the arrow function body</h2><p>In JavaScript, an expression evaluates to a value as shown in the following example.</p><pre class="wp-block-code"><div><code class="hljs">10 + 20;</code></div></pre><p>An expression also does a specific task such as:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">if</span> (x === y) {
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'x equals y'</span>);
}</code></div></pre><p>If you use an expression in the body of an arrow function, you don&#8217;t need to use the curly braces.</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> square = <span class="hljs-function"><span class="hljs-params">x</span> =&gt;</span> x * x;</code></div></pre><p>However, if you use&nbsp;a statement, you must wrap it inside a pair of curly braces as in the following example:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> except = <span class="hljs-function"><span class="hljs-params">msg</span> =&gt;</span> {
    <span class="hljs-keyword">throw</span> msg;
};</code></div></pre><h2>JavaScript arrow functions and object literal</h2><p>Consider the following example:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> setColor = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">color</span>) </span>{
    <span class="hljs-keyword">return</span> {<span class="hljs-attr">value</span>: color}
};

<span class="hljs-keyword">let</span> backgroundColor = setColor(<span class="hljs-string">'Red'</span>);
<span class="hljs-built_in">console</span>.log(backgroundColor.value); <span class="hljs-comment">// "Red"</span></code></div></pre><p>The <code>setColor()</code> function expression returns an object that has the value property set to the color argument.&nbsp;If you try the following syntax to return an object literal from an arrow function, you will get an error.</p><pre class="wp-block-code"><div><code class="hljs language-php">p =&gt; {object:literal}
</code></div></pre><p>For example, the following code causes an error.</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> setColor = <span class="hljs-function"><span class="hljs-params">color</span> =&gt;</span> {<span class="hljs-attr">value</span>: color };</code></div></pre><p>Since both block and object literal use curly brackets, the JavasScript engine cannot distinguish between a block and an object.</p><p>To fix this, you need to wrap the object literal in parentheses as follows:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> setColor = <span class="hljs-function"><span class="hljs-params">color</span> =&gt;</span> ({<span class="hljs-attr">value</span>: color });</code></div></pre><h2>Arrow function vs. regular function</h2><p>There are two main differences between an arrow function and a regular function.</p><ol><li>First, in the arrow function, the <code><a href="https://www.javascripttutorial.net/javascript-this/">this</a></code>, <code>arguments</code>, <code>super</code>, <code><a href="https://www.javascripttutorial.net/es6/javascript-new-target/">new.target</a></code> are lexical. It means that the arrow function uses these variables (or constructs) from the enclosing lexical scope.</li><li>Second, an arrow function cannot be used as a function constructor. If you use the <code>new</code> keyword to create a new object from an arrow function, you will get an error.</li></ol><h3>JavaScript arrow functions and <code>this</code> value</h3><p>In JavaScript, a new function defines its own <code>this</code> value. However, it is not the case for the arrow function. See the following example:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Car</span>(<span class="hljs-params"></span>) </span>{
    <span class="hljs-keyword">this</span>.speed = <span class="hljs-number">0</span>;

    <span class="hljs-keyword">this</span>.speedUp = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">speed</span>) </span>{
        <span class="hljs-keyword">this</span>.speed = speed;
        setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{
            <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.speed); <span class="hljs-comment">// undefined</span>
        }, <span class="hljs-number">1000</span>);

    };
}

<span class="hljs-keyword">let</span> car = <span class="hljs-keyword">new</span> Car();
car.speedUp(<span class="hljs-number">50</span>);</code></div></pre><p>Inside the anonymous function of the <code>setTimeOut()</code> function, the <code>this.speed</code> is <code>undefined</code>. The reason is that the <code>this</code> of the anonymous function shadows the <code>this</code> of the <code>speedUp()</code> method.</p><p>To fix this, you often assign the <code>this</code> value to a variable that doesn&#8217;t shadow inside the anonymous function as follows:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Car</span>(<span class="hljs-params"></span>) </span>{
    <span class="hljs-keyword">this</span>.speed = <span class="hljs-number">0</span>;

    <span class="hljs-keyword">this</span>.speedUp = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">speed</span>) </span>{
        <span class="hljs-keyword">this</span>.speed = speed;
        <span class="hljs-keyword">let</span> self = <span class="hljs-keyword">this</span>;
        setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{
            <span class="hljs-built_in">console</span>.log(self.speed);
        }, <span class="hljs-number">1000</span>);

    };
}

<span class="hljs-keyword">let</span> car = <span class="hljs-keyword">new</span> Car();
car.speedUp(<span class="hljs-number">50</span>); <span class="hljs-comment">// 50;</span></code></div></pre><p>Unlike an anonymous function, an arrow function captures the <code>this</code> value of the enclosing context instead of creating its own <code>this</code> context. The following code should work as expected:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Car</span>(<span class="hljs-params"></span>) </span>{
    <span class="hljs-keyword">this</span>.speed = <span class="hljs-number">0</span>;

    <span class="hljs-keyword">this</span>.speedUp = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">speed</span>) </span>{
        <span class="hljs-keyword">this</span>.speed = speed;
        setTimeout(
            <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.speed),
            <span class="hljs-number">1000</span>);

    };
}

<span class="hljs-keyword">let</span> car = <span class="hljs-keyword">new</span> Car();
car.speedUp(<span class="hljs-number">50</span>); <span class="hljs-comment">// 50;</span>
</code></div></pre><h3>JavaScript arrow functions and the <code>arguments</code> object</h3><p>An arrow function doesn&#8217;t have the <code>arguments</code> object. Therefore, the <code>arguments</code> is a reference of the name in the enclosing scope. For example:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show</span>(<span class="hljs-params"></span>) </span>{
    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-params">x</span> =&gt;</span> x + <span class="hljs-built_in">arguments</span>[<span class="hljs-number">0</span>];
}

<span class="hljs-keyword">let</span> display = show(<span class="hljs-number">10</span>, <span class="hljs-number">20</span>);
<span class="hljs-keyword">let</span> result = display(<span class="hljs-number">5</span>);
<span class="hljs-built_in">console</span>.log(result); <span class="hljs-comment">// 15</span></code></div></pre><p>The arrow function inside the <code>showMe()</code> function references the <code>arguments</code> object. However, this <code>arguments</code> object belongs to the <code>show()</code> function, not the arrow function.</p><h3>JavaScript arrow functions and the <code>prototype</code></h3><p>When you define a <a href="https://www.javascripttutorial.net/javascript-function/">function</a> using a <code>function</code> keyword, the function has a property called <code><a href="https://www.javascripttutorial.net/javascript-prototype/">prototype</a></code>:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dump</span>(<span class="hljs-params"> message </span>) </span>{
    <span class="hljs-built_in">console</span>.log(message);
}
<span class="hljs-built_in">console</span>.log(dump.hasOwnProperty(<span class="hljs-string">'prototype'</span>)); <span class="hljs-comment">// true</span></code></div></pre><p>However, arrow functions don&#8217;t have the <code>prototype</code> property:</p><pre class="wp-block-code"><div><code class="hljs language-javascript"><span class="hljs-keyword">let</span> dump = <span class="hljs-function"><span class="hljs-params">message</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(message);
<span class="hljs-built_in">console</span>.log(dump.hasOwnProperty(<span class="hljs-string">'prototype'</span>)); <span class="hljs-comment">// false</span></code></div></pre><p>It is a good practice to use arrow functions for <a href="https://www.javascripttutorial.net/javascript-callback/">callbacks</a> and <a href="https://www.javascripttutorial.net/javascript-closure/">closures</a> because the syntax of arrow functions are cleaner.</p><p>In this tutorial, you have learned about the JavaScript arrow function syntax and how to apply arrow functions to make the code cleaner.</p><div class="helpful-block-content wth-theme-thumbs" data-title="" ><ul><li><span class="wth-title">Was this tutorial helpful ?</span></li><li><a data-post="488" data-post-url="https://www.javascripttutorial.net/es6/javascript-arrow-function/" data-post-title="An Introduction to JavaScript Arrow Functions" data-response="1" href="#" class="wth-green-btn icon-thumbsup icon1-thumbs-up4">Yes</a><a data-response="0" data-post="488" data-post-url="https://www.javascripttutorial.net/es6/javascript-arrow-function/" data-post-title="An Introduction to JavaScript Arrow Functions" href="#" class="wth-red-btn icon-thumbsdown icon1-thumbs-down4">No</a></li></ul></div></div><div class="ad"><div data-type="ad" data-publisher="javascripttutorial.net" data-format="300x250" data-zone="content_bottom"></div></div><div class="page-navigation"><div class="page-previous"><a class="prev-page-anchor" href="https://www.javascripttutorial.net/es6/javascript-new-target/" rel="prev" title="Introduction to JavaScript new.target Metaproperty"><span>Previous</span> Introduction to JavaScript new.target Metaproperty</a></div><div class="page-next"><a class="next-page-anchor" href="https://www.javascripttutorial.net/es6/when-you-should-not-use-arrow-functions/" rel="next" title="When You Should Not Use Arrow Functions"><span>Next</span> When You Should Not Use Arrow Functions</a></div></div></article></main><aside class="sidebar sidebar-primary widget-area" role="complementary" aria-label="Primary Sidebar"><section id="search-4" class="widget widget_search"><div class="widget-wrap"><form class="search-form" method="get" action="https://www.javascripttutorial.net/" role="search"><input class="search-form-input" type="search" name="s" id="searchform-1" placeholder="Search this website"><input class="search-form-submit" type="submit" value="Search"><meta content="https://www.javascripttutorial.net/?s={s}"></form></div></section><section id="textblockswidget-2" class="widget widget_textblockswidget"><div class="widget-wrap"><div class="text-block sidebar-top"><div class="ad"><div data-type="ad" data-publisher="javascripttutorial.net" data-format="300x250" data-zone="sidebar_top"></div></div><div id="carbon-block"></div> <script>try {
  fetch(new Request("https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js", { method: 'HEAD', mode: 'no-cors' })).then(function(response) {
    return true;
  }).catch(function(e) {
    var carbonScript = document.createElement("script");
    carbonScript.src = "//cdn.carbonads.com/carbon.js?serve=CE7IC2QE&placement=wwwjavascripttutorialnet";
    carbonScript.id = "_carbonads_js";
    document.getElementById("carbon-block").appendChild(carbonScript);
  });
} catch (error) {
  console.log(error);
}</script></div></div></section><section id="nav_menu-10" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">New ES6 Syntax</h4><div class="menu-es6-new-syntax-container"><ul id="menu-es6-new-syntax" class="menu"><li id="menu-item-769" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-769"><a title="JavaScript let" href="https://www.javascripttutorial.net/es6/javascript-let/">JavaScript let</a></li><li id="menu-item-84751" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84751"><a title="Differences Between var and let" href="https://www.javascripttutorial.net/es6/difference-between-var-and-let/">var vs. let</a></li><li id="menu-item-770" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-770"><a title="JavaScript const" href="https://www.javascripttutorial.net/es6/javascript-const/">JavaScript const</a></li><li id="menu-item-771" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-771"><a title="JavaScript Template Literals" href="https://www.javascripttutorial.net/es6/javascript-template-literals/">Template Literals</a></li><li id="menu-item-772" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-772"><a title="Object Literal Syntax Extensions" href="https://www.javascripttutorial.net/es6/object-literal-extensions/">Object Literal Syntax Extensions</a></li><li id="menu-item-773" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-773"><a title="JavaScript Default Parameters" href="https://www.javascripttutorial.net/es6/javascript-default-parameters/">Default Parameters</a></li><li id="menu-item-774" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-774"><a title="JavaScript Rest Parameters" href="https://www.javascripttutorial.net/es6/javascript-rest-parameters/">Rest Parameters</a></li><li id="menu-item-775" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-775"><a title="JavaScript Spread Operator" href="https://www.javascripttutorial.net/es6/javascript-spread/">Spread Operator</a></li><li id="menu-item-776" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-776"><a title="JavaScript Destructuring" href="https://www.javascripttutorial.net/es6/destructuring/">Destructuring</a></li><li id="menu-item-777" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-777"><a title="JavaScript for…of Loop" href="https://www.javascripttutorial.net/es6/javascript-for-of/">for…of Loop</a></li><li id="menu-item-84759" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84759"><a title="A Quick Look at Octal and Binary Literals in ES6" href="https://www.javascripttutorial.net/es6/octal-and-binary-literals/">Octal and Binary Literals</a></li></ul></div></div></section><section id="nav_menu-11" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">ES6 Module &#038; Class</h4><div class="menu-es6-module-class-container"><ul id="menu-es6-module-class" class="menu"><li id="menu-item-84749" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84749"><a title="A Comprehensive Look at ES6 Modules" href="https://www.javascripttutorial.net/es6/es6-modules/">Modules</a></li><li id="menu-item-778" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-778"><a title="JavaScript Class Fundamentals" href="https://www.javascripttutorial.net/es6/javascript-class/">Class Fundamentals</a></li><li id="menu-item-779" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-779"><a title="JavaScript Inheritance" href="https://www.javascripttutorial.net/es6/javascript-inheritance/">Inheritance</a></li><li id="menu-item-780" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-780"><a title="JavaScript new.target Metaproperty" href="https://www.javascripttutorial.net/es6/javascript-new-target/">new.target</a></li></ul></div></div></section><section id="textblockswidget-3" class="widget widget_textblockswidget"><div class="widget-wrap"><div class="text-block sidebar-middle"><div class="ad"><div data-type="ad" data-publisher="javascripttutorial.net" data-format="300x250" data-zone="sidebar_middle"></div></div></div></div></section><section id="nav_menu-22" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">ES6 Arrow Functions</h4><div class="menu-es6-arrow-functions-container"><ul id="menu-es6-arrow-functions" class="menu"><li id="menu-item-86536" class="menu-item menu-item-type-post_type menu-item-object-page current-menu-item page_item page-item-488 current_page_item menu-item-86536"><a title="An Introduction to JavaScript Arrow Functions" href="https://www.javascripttutorial.net/es6/javascript-arrow-function/" aria-current="page">Arrow Functions</a></li><li id="menu-item-86535" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-86535"><a title="When you should not use the arrow functions" href="https://www.javascripttutorial.net/es6/when-you-should-not-use-arrow-functions/">When Not To Use Arrow Functions</a></li></ul></div></div></section><section id="nav_menu-16" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Iterators &#038; Generators</h4><div class="menu-es6-iterators-generators-container"><ul id="menu-es6-iterators-generators" class="menu"><li id="menu-item-84777" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84777"><a title="JavaScript Iterators" href="https://www.javascripttutorial.net/es6/javascript-iterator/">Iterators</a></li><li id="menu-item-84776" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84776"><a title="JavaScript Generators" href="https://www.javascripttutorial.net/es6/javascript-generators/">Generators</a></li><li id="menu-item-84824" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84824"><a title="JavaScript yield Keyword" href="https://www.javascripttutorial.net/es6/javascript-yield/">yield Keyword</a></li></ul></div></div></section><section id="nav_menu-17" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Promises</h4><div class="menu-es6-promises-container"><ul id="menu-es6-promises" class="menu"><li id="menu-item-84778" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84778"><a title="JavaScript Promises" href="https://www.javascripttutorial.net/es6/javascript-promises/">Promises</a></li><li id="menu-item-85916" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85916"><a title="Promise Chaining" href="https://www.javascripttutorial.net/es6/promise-chaining/">Promise Chaining</a></li><li id="menu-item-85939" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85939"><a title="JavaScript Promise.all()" href="https://www.javascripttutorial.net/es6/javascript-promise-all/">Promise.all()</a></li><li id="menu-item-85938" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85938"><a title="JavaScript Promise.race()" href="https://www.javascripttutorial.net/es6/javascript-promise-race/">Promise.race()</a></li><li id="menu-item-85915" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-85915"><a title="Promise Error Handling" href="https://www.javascripttutorial.net/es6/promise-error-handling/">Promise Error Handling</a></li></ul></div></div></section><section id="nav_menu-12" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">ES6 Collections</h4><div class="menu-es6-collection-container"><ul id="menu-es6-collection" class="menu"><li id="menu-item-751" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-751"><a title="JavaScript Set" href="https://www.javascripttutorial.net/es6/javascript-set/">Set</a></li><li id="menu-item-752" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-752"><a title="Essential Guide to JavaScript Map" href="https://www.javascripttutorial.net/es6/javascript-map/">Map</a></li></ul></div></div></section><section id="nav_menu-18" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Array Extensions</h4><div class="menu-es6-array-extensions-container"><ul id="menu-es6-array-extensions" class="menu"><li id="menu-item-84855" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84855"><a title="JavaScript Array.of() Method" href="https://www.javascripttutorial.net/es6/javascript-array-of/">Array.of()</a></li><li id="menu-item-84854" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84854"><a title="JavaScript Array from() method" href="https://www.javascripttutorial.net/es6/javascript-array-from/">Array.from()</a></li><li id="menu-item-84875" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84875"><a title="JavaScript Array find() Method" href="https://www.javascripttutorial.net/es6/javascript-array-find/">Array find()</a></li><li id="menu-item-84874" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84874"><a title="Array findIndex()" href="https://www.javascripttutorial.net/es6/javascript-array-findindex/">Array findIndex()</a></li></ul></div></div></section><section id="nav_menu-20" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Object Extensions</h4><div class="menu-es6-object-extensions-container"><ul id="menu-es6-object-extensions" class="menu"><li id="menu-item-84937" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84937"><a title="JavaScript Object.assign()" href="https://www.javascripttutorial.net/es6/javascript-object-assign/">Object.assign()</a></li><li id="menu-item-84936" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84936"><a title="JavaScript Object.is()" href="https://www.javascripttutorial.net/es6/javascript-object-is/">Object.is()</a></li></ul></div></div></section><section id="nav_menu-21" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">String Extensions</h4><div class="menu-es6-string-extensions-container"><ul id="menu-es6-string-extensions" class="menu"><li id="menu-item-84949" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84949"><a title="JavaScript String startsWith" href="https://www.javascripttutorial.net/es6/javascript-string-startswith/">String startsWith()</a></li><li id="menu-item-84948" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84948"><a title="JavaScript String endsWith" href="https://www.javascripttutorial.net/es6/javascript-string-endswith/">String endsWith()</a></li><li id="menu-item-84953" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84953"><a title="JavaScript String includes()" href="https://www.javascripttutorial.net/es6/javascript-string-includes/">String includes()</a></li></ul></div></div></section><section id="nav_menu-19" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Proxy &#038; Reflection</h4><div class="menu-es6-proxy-reflection-container"><ul id="menu-es6-proxy-reflection" class="menu"><li id="menu-item-84857" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84857"><a title="JavaScript Proxy" href="https://www.javascripttutorial.net/es6/javascript-proxy/">Proxy</a></li><li id="menu-item-84856" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-84856"><a title="JavaScript Reflection" href="https://www.javascripttutorial.net/es6/javascript-reflection/">Reflection</a></li></ul></div></div></section><section id="textblockswidget-4" class="widget widget_textblockswidget"><div class="widget-wrap"><div class="text-block sidebar-bottom"><div class="ad"><div data-type="ad" data-publisher="javascripttutorial.net" data-format="300x250" data-zone="sidebar_bottom"></div></div></div></div></section></aside></div></div></div><div class="footer-widgets"><div class="wrap"><div class="widget-area footer-widgets-1 footer-widget-area"><section id="text-2" class="widget widget_text"><div class="widget-wrap"><h4 class="widget-title widgettitle">About JavaScript Tutorial</h4><div class="textwidget">The JavaScript Tutorial website helps you learn JavaScript programming from scratch quickly and effectively.</div></div></section></div><div class="widget-area footer-widgets-2 footer-widget-area"><section id="recently_created_pages-2" class="widget Recently_Created_Pages"><div class="widget-wrap"><h4 class="widget-title widgettitle">Recent Tutorials</h4><ul><li class='page_item page-item-87351'><a href='https://www.javascripttutorial.net/nodejs-tutorial/npm-publish/' title='Npm Publish'>Npm Publish</a></li><li class='page_item page-item-87344'><a href='https://www.javascripttutorial.net/nodejs-tutorial/npm-uninstall/' title='Npm Uninstall'>Npm Uninstall</a></li><li class='page_item page-item-87340'><a href='https://www.javascripttutorial.net/nodejs-tutorial/npm-view/' title='Npm View'>Npm View</a></li><li class='page_item page-item-87329'><a href='https://www.javascripttutorial.net/nodejs-tutorial/npm-list/' title='Npm List'>Npm List</a></li><li class='page_item page-item-87319'><a href='https://www.javascripttutorial.net/nodejs-tutorial/npm-semantic-versioning/' title='Npm Semantic Versioning'>Npm Semantic Versioning</a></li></ul></div></section></div><div class="widget-area footer-widgets-3 footer-widget-area"><section id="nav_menu-2" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Site Links</h4><div class="menu-footer-container"><ul id="menu-footer" class="menu"><li id="menu-item-30" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-30"><a title="Want to know more about us?" href="https://www.javascripttutorial.net/about/">About Us</a></li><li id="menu-item-29" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-29"><a title="Do you have any suggestions or feedback? Just contact us" href="https://www.javascripttutorial.net/contact/">Contact Us</a></li><li id="menu-item-28" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-28"><a title="Privacy Policy" href="https://www.javascripttutorial.net/privacy-policy/">Privacy Policy</a></li></ul></div></div></section></div></div></div><footer class="site-footer"><div class="wrap"><div class="creds"><p>Copyright &#x000A9;&nbsp;2020 by JavaScript Tutorial Website. All Right Reserved.</div></div></footer></div><script type='text/javascript'>function _dmBootstrap(file) {
    var _dma = document.createElement('script');
    _dma.type = 'text/javascript';
    _dma.async = true;
    _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
}
function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js'); }
(function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000); })();</script><noscript><style>.lazyload{display:none;}</style></noscript><script data-noptimize="1">window.lazySizesConfig=window.lazySizesConfig||{};window.lazySizesConfig.loadMode=1;</script><script async data-noptimize="1" src='https://cdn.javascripttutorial.net//wp-content/plugins/autoptimize/classes/external/js/lazysizes.min.js?ao_version=2.7.3'></script> <script type='text/javascript'>var wth_js_lang = {"ajax_url":"https:\/\/www.javascripttutorial.net\/wp-admin\/admin-ajax.php","nonce":"f6ac984cdb","confirm":"Are you sure to delete item?","positive_feedback":null,"positive_feedback_option":"feedback_messege","positive_feedback_required":null,"negative_feedback":"true","negative_feedback_required":"true","wth_title_nothank":"What was wrong? Please help us to improve","wth_title_yesthank":"Well Done! Please leave your positive feedback.","wth_thank_you":"Thank You for your feedback!","submit_text":"Submit","wth_ga_enable":"","wth_ga_category":"Was This Helpful?","wth_ga_positive":"Positive Reviews","wth_ga_negative":"Negative Reviews","wth_share_ask":"Awesome, share it:","wth_fb_share":"Share","wth_twitter_share":"Tweet"};</script> <script defer src="https://cdn.javascripttutorial.net/wp-content/cache/autoptimize/js/autoptimize_8e629f2ae4d14517d0dd9cc7feb43e91.js"></script></body></html>